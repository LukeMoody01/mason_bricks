// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final modelBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"{{#use_serializable}}{{model_name.snakeCase()}}.g.dart{{/use_serializable}}","data":"cGFydCBvZiAne3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX0uZGFydCc7DQoNCnt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSBfJHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fUZyb21Kc29uKE1hcDxTdHJpbmcsIGR5bmFtaWM+IGpzb24pID0+IHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSh7eyNwcm9wZXJ0aWVzfX0NCiAgICAgIHt7bmFtZX19OiB7eyNpc0N1c3RvbUxpc3R9fShqc29uWyd7e25hbWV9fSddIGFzIExpc3Q8ZHluYW1pYz4pLm1hcCgoZHluYW1pYyBlKSA9PiB7e2N1c3RvbUxpc3RUeXBlfX0uZnJvbUpzb24oZSBhcyBNYXA8U3RyaW5nLCBkeW5hbWljPikpLnRvTGlzdCgpe3svaXNDdXN0b21MaXN0fX17e15pc0N1c3RvbUxpc3R9fXt7I2lzQ3VzdG9tRGF0YVR5cGV9fXt7dHlwZX19LmZyb21Kc29uKGpzb25bJ3t7bmFtZX19J10gYXMgTWFwPFN0cmluZywgZHluYW1pYz4pe3svaXNDdXN0b21EYXRhVHlwZX19e3teaXNDdXN0b21EYXRhVHlwZX19anNvblsne3tuYW1lfX0nXSBhcyB7eyNoYXNTcGVjaWFsfX17e3t0eXBlfX19e3svaGFzU3BlY2lhbH19e3teaGFzU3BlY2lhbH19e3t0eXBlfX17ey9oYXNTcGVjaWFsfX17ey9pc0N1c3RvbURhdGFUeXBlfX17ey9pc0N1c3RvbUxpc3R9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgICApOw0KDQpNYXA8U3RyaW5nLCBkeW5hbWljPiBfJHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fVRvSnNvbih7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0gaW5zdGFuY2UpID0+IDxTdHJpbmcsIGR5bmFtaWM+eyB7eyNwcm9wZXJ0aWVzfX0NCiAgICAgICd7e25hbWV9fSc6IGluc3RhbmNlLnt7bmFtZX19LHt7L3Byb3BlcnRpZXN9fQ0KICAgIH07","type":"text"},{"path":"{{model_name.snakeCase()}}.dart","data":"e3sjdXNlX25vbmV9fXt7PiBiYXNpY19tb2RlbCB9fXt7L3VzZV9ub25lfX17eyN1c2Vfc2VyaWFsaXphYmxlfX17ez4gc2VyaWFsaXphYmxlX21vZGVsIH19e3svdXNlX3NlcmlhbGl6YWJsZX19e3sjdXNlX2ZyZWV6ZWR9fXt7PiBmcmVlemVkX21vZGVsIH19e3svdXNlX2ZyZWV6ZWR9fQ==","type":"text"},{"path":"{{~ basic_from_json }}","data":"Ly8vIENyZWF0ZXMgYSB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0gZnJvbSBKc29uIG1hcA0KZmFjdG9yeSB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0uZnJvbUpzb24oTWFwPFN0cmluZywgZHluYW1pYz4ganNvbikgPT4ge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19KHt7I3Byb3BlcnRpZXN9fQ0KICAgICAge3tuYW1lfX06IHt7I2lzQ3VzdG9tTGlzdH19KGpzb25bJ3t7bmFtZX19J10gYXMgTGlzdDxkeW5hbWljPikubWFwKChkeW5hbWljIGUpID0+IHt7Y3VzdG9tTGlzdFR5cGV9fS5mcm9tSnNvbihlIGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KSkudG9MaXN0KCl7ey9pc0N1c3RvbUxpc3R9fXt7XmlzQ3VzdG9tTGlzdH19e3sjaXNDdXN0b21EYXRhVHlwZX19e3t0eXBlfX0uZnJvbUpzb24oanNvblsne3tuYW1lfX0nXSBhcyBNYXA8U3RyaW5nLCBkeW5hbWljPil7ey9pc0N1c3RvbURhdGFUeXBlfX17e15pc0N1c3RvbURhdGFUeXBlfX1qc29uWyd7e25hbWV9fSddIGFzIHt7I2hhc1NwZWNpYWx9fXt7e3R5cGV9fX17ey9oYXNTcGVjaWFsfX17e15oYXNTcGVjaWFsfX17e3R5cGV9fXt7L2hhc1NwZWNpYWx9fXt7L2lzQ3VzdG9tRGF0YVR5cGV9fXt7L2lzQ3VzdG9tTGlzdH19LHt7L3Byb3BlcnRpZXN9fQ0KICAgICk7","type":"text"},{"path":"{{~ basic_model }}","data":"e3sjdXNlX2VxdWF0YWJsZX19aW1wb3J0ICdwYWNrYWdlOmVxdWF0YWJsZS9lcXVhdGFibGUuZGFydCc7e3svdXNlX2VxdWF0YWJsZX19DQp7ez4gcmVsYXRpb25zIH19DQovLy8ge0B0ZW1wbGF0ZSB7e3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX19fQ0KLy8vIHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSBkZXNjcmlwdGlvbg0KLy8vIHtAZW5kdGVtcGxhdGV9DQpjbGFzcyB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX17eyN1c2VfZXF1YXRhYmxlfX0gZXh0ZW5kcyBFcXVhdGFibGV7ey91c2VfZXF1YXRhYmxlfX0gew0KICAvLy8ge0BtYWNybyB7e3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX19fQ0KICBjb25zdCB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0oe3sjaGFzUHJvcGVydGllc319eyB7eyNwcm9wZXJ0aWVzfX0NCiAgICB7e15pc051bGxhYmxlfX1yZXF1aXJlZCB7ey9pc051bGxhYmxlfX10aGlzLnt7bmFtZX19LHt7L3Byb3BlcnRpZXN9fQ0KICB9e3svaGFzUHJvcGVydGllc319KTsNCnt7I3VzZV9qc29ufX0NCiAge3s+IGJhc2ljX2Zyb21fanNvbiB9fXt7L3VzZV9qc29ufX0NCnt7I3Byb3BlcnRpZXN9fQ0KICAvLy8gQSBkZXNjcmlwdGlvbiBmb3Ige3tuYW1lfX0NCiAgZmluYWwge3sjaGFzU3BlY2lhbH19e3t7dHlwZX19fXt7L2hhc1NwZWNpYWx9fXt7Xmhhc1NwZWNpYWx9fXt7dHlwZX19e3svaGFzU3BlY2lhbH19IHt7bmFtZX19Ow0Ke3svcHJvcGVydGllc319e3sjdXNlX2NvcHl3aXRofX0NCiAge3s+IGNvcHlfd2l0aCB9fXt7L3VzZV9jb3B5d2l0aH19DQp7eyN1c2VfZXF1YXRhYmxlfX0NCiAge3s+IGVxdWF0YWJsZV9wcm9wcyB9fXt7L3VzZV9lcXVhdGFibGV9fQ0Ke3sjdXNlX2pzb259fQ0KICB7ez4gYmFzaWNfdG9fanNvbiB9fXt7L3VzZV9qc29ufX0NCnt7I3VzZV90b3N0cmluZ319DQogIHt7PiB0b19zdHJpbmcgfX17ey91c2VfdG9zdHJpbmd9fQ0KfQ0K","type":"text"},{"path":"{{~ basic_to_json }}","data":"Ly8vIENyZWF0ZXMgYSBKc29uIG1hcCBmcm9tIGEge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19DQpNYXA8U3RyaW5nLCBkeW5hbWljPiB0b0pzb24oKSA9PiA8U3RyaW5nLCBkeW5hbWljPnsge3sjcHJvcGVydGllc319DQogICAgICAne3tuYW1lfX0nOiB7e25hbWV9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgICB9Ow==","type":"text"},{"path":"{{~ copy_with }}","data":"Ly8vIENyZWF0ZXMgYSBjb3B5IG9mIHRoZSBjdXJyZW50IHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSB3aXRoIHByb3BlcnR5IGNoYW5nZXMNCnt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSBjb3B5V2l0aCh7eyNoYXNQcm9wZXJ0aWVzfX17IHt7I3Byb3BlcnRpZXN9fQ0KICB7eyNoYXNTcGVjaWFsfX17e3t0eXBlfX19e3svaGFzU3BlY2lhbH19e3teaGFzU3BlY2lhbH19e3t0eXBlfX17ey9oYXNTcGVjaWFsfX17e15pc051bGxhYmxlfX0/e3svaXNOdWxsYWJsZX19e3sjaXNOdWxsYWJsZX19IEZ1bmN0aW9uKCk/e3svaXNOdWxsYWJsZX19IHt7bmFtZX19LHt7L3Byb3BlcnRpZXN9fQ0KfXt7L2hhc1Byb3BlcnRpZXN9fSkgew0KICByZXR1cm4ge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19KHt7I3Byb3BlcnRpZXN9fQ0KICAgIHt7bmFtZX19OiB7e25hbWV9fXt7I2lzTnVsbGFibGV9fSAhPSBudWxsID8ge3tuYW1lfX0oKXt7L2lzTnVsbGFibGV9fSB7eyNpc051bGxhYmxlfX06e3svaXNOdWxsYWJsZX19e3teaXNOdWxsYWJsZX19Pz97ey9pc051bGxhYmxlfX0gdGhpcy57e25hbWV9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgKTsNCn0NCg==","type":"text"},{"path":"{{~ equatable_props }}","data":"QG92ZXJyaWRlDQpMaXN0PE9iamVjdD8+IGdldCBwcm9wcyA9PiBbe3sjcHJvcGVydGllc319DQogICAgICB7e25hbWV9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgICBdOw==","type":"text"},{"path":"{{~ freezed_model }}","data":"aW1wb3J0ICdwYWNrYWdlOmZyZWV6ZWRfYW5ub3RhdGlvbi9mcmVlemVkX2Fubm90YXRpb24uZGFydCc7DQp7ez4gcmVsYXRpb25zIH19DQogDQpwYXJ0ICd7e21vZGVsX25hbWUuc25ha2VDYXNlKCl9fS5mcmVlemVkLmRhcnQnOw0Ke3sjdXNlX2pzb259fXBhcnQgJ3t7bW9kZWxfbmFtZS5zbmFrZUNhc2UoKX19LmcuZGFydCc7e3svdXNlX2pzb259fQ0KDQovLy8ge0B0ZW1wbGF0ZSB7e3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX19fQ0KLy8vIHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSBkZXNjcmlwdGlvbg0KLy8vIHtAZW5kdGVtcGxhdGV9DQpAZnJlZXplZA0KY2xhc3Mge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19IHdpdGggXyR7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0gew0KICAvLy8ge0BtYWNybyB7e3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX19fQ0KICBjb25zdCBmYWN0b3J5IHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSh7eyNoYXNQcm9wZXJ0aWVzfX17IHt7I3Byb3BlcnRpZXN9fQ0KICAgIHt7XmlzTnVsbGFibGV9fXJlcXVpcmVkIHt7L2lzTnVsbGFibGV9fXt7I2hhc1NwZWNpYWx9fXt7e3R5cGV9fX17ey9oYXNTcGVjaWFsfX17e15oYXNTcGVjaWFsfX17e3R5cGV9fXt7L2hhc1NwZWNpYWx9fSB7e25hbWV9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgfXt7L2hhc1Byb3BlcnRpZXN9fSkgPSBfe3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19Ow0KICB7eyN1c2VfanNvbn19DQogIHt7PiBzZXJpYWxpemFibGVfZnJvbV9qc29uIH19e3svdXNlX2pzb259fQ0KfQ0K","type":"text"},{"path":"{{~ relations }}","data":"e3sjaGFzUmVsYXRpb25zfX17eyNyZWxhdGlvbnN9fWltcG9ydCAncGFja2FnZTp7e3tmdWxsUGF0aH19fXt7bmFtZS5zbmFrZUNhc2UoKX19LmRhcnQnOw0Ke3svcmVsYXRpb25zfX17ey9oYXNSZWxhdGlvbnN9fQ==","type":"text"},{"path":"{{~ serializable_from_json }}","data":"Ly8vIENyZWF0ZXMgYSB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0gZnJvbSBKc29uIG1hcA0KZmFjdG9yeSB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0uZnJvbUpzb24oTWFwPFN0cmluZywgZHluYW1pYz4gZGF0YSkgPT4gXyR7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX1Gcm9tSnNvbihkYXRhKTs=","type":"text"},{"path":"{{~ serializable_model }}","data":"e3sjdXNlX2VxdWF0YWJsZX19aW1wb3J0ICdwYWNrYWdlOmVxdWF0YWJsZS9lcXVhdGFibGUuZGFydCc7e3svdXNlX2VxdWF0YWJsZX19DQppbXBvcnQgJ3BhY2thZ2U6anNvbl9hbm5vdGF0aW9uL2pzb25fYW5ub3RhdGlvbi5kYXJ0JzsNCnt7PiByZWxhdGlvbnMgfX0NCg0KcGFydCAne3ttb2RlbF9uYW1lLnNuYWtlQ2FzZSgpfX0uZy5kYXJ0JzsNCg0KLy8vIHtAdGVtcGxhdGUge3t7bW9kZWxfbmFtZS5zbmFrZUNhc2UoKX19fX0NCi8vLyB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0gZGVzY3JpcHRpb24NCi8vLyB7QGVuZHRlbXBsYXRlfQ0KQEpzb25TZXJpYWxpemFibGUoKQ0KY2xhc3Mge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19e3sjdXNlX2VxdWF0YWJsZX19IGV4dGVuZHMgRXF1YXRhYmxle3svdXNlX2VxdWF0YWJsZX19IHsNCiAgLy8vIHtAbWFjcm8ge3t7bW9kZWxfbmFtZS5zbmFrZUNhc2UoKX19fX0NCiAgY29uc3Qge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19KHt7I2hhc1Byb3BlcnRpZXN9fXsge3sjcHJvcGVydGllc319DQogIHt7XmlzTnVsbGFibGV9fXJlcXVpcmVkIHt7L2lzTnVsbGFibGV9fXRoaXMue3tuYW1lfX0se3svcHJvcGVydGllc319DQogIH17ey9oYXNQcm9wZXJ0aWVzfX0pOw0Ke3sjdXNlX2pzb259fQ0KICB7ez4gc2VyaWFsaXphYmxlX2Zyb21fanNvbiB9fXt7L3VzZV9qc29ufX0NCnt7I3Byb3BlcnRpZXN9fQ0KICAvLy8gQSBkZXNjcmlwdGlvbiBmb3Ige3tuYW1lfX0NCiAgZmluYWwge3sjaGFzU3BlY2lhbH19e3t7dHlwZX19fXt7L2hhc1NwZWNpYWx9fXt7Xmhhc1NwZWNpYWx9fXt7dHlwZX19e3svaGFzU3BlY2lhbH19IHt7bmFtZX19Ow0Ke3svcHJvcGVydGllc319e3sjdXNlX2NvcHl3aXRofX0NCiAge3s+IGNvcHlfd2l0aCB9fXt7L3VzZV9jb3B5d2l0aH19DQp7eyN1c2VfZXF1YXRhYmxlfX0NCiAge3s+IGVxdWF0YWJsZV9wcm9wcyB9fXt7L3VzZV9lcXVhdGFibGV9fQ0Ke3sjdXNlX2pzb259fQ0KICB7ez4gc2VyaWFsaXphYmxlX3RvX2pzb24gfX17ey91c2VfanNvbn19DQp7eyN1c2VfdG9zdHJpbmd9fQ0KICB7ez4gdG9fc3RyaW5nIH19e3svdXNlX3Rvc3RyaW5nfX0NCn0NCg==","type":"text"},{"path":"{{~ serializable_to_json }}","data":"Ly8vIENyZWF0ZXMgYSBKc29uIG1hcCBmcm9tIGEge3ttb2RlbF9uYW1lLnBhc2NhbENhc2UoKX19DQpNYXA8U3RyaW5nLCBkeW5hbWljPiB0b0pzb24oKSA9PiBfJHt7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fVRvSnNvbih0aGlzKTs=","type":"text"},{"path":"{{~ to_string }}","data":"Ly8vIENyZWF0ZXMgYSB0b1N0cmluZygpIG92ZXJyaWRlIGZvciB7e21vZGVsX25hbWUucGFzY2FsQ2FzZSgpfX0NCkBvdmVycmlkZQ0KU3RyaW5nIHRvU3RyaW5nKCkgPT4gJ3t7bW9kZWxfbmFtZS5wYXNjYWxDYXNlKCl9fSh7eyNwcm9wZXJ0aWVzfX17e25hbWV9fTogJHt7bmFtZX19e3teaXNMYXN0UHJvcGVydHl9fSwge3svaXNMYXN0UHJvcGVydHl9fXt7L3Byb3BlcnRpZXN9fSknOw==","type":"text"}],"hooks":[{"path":"data_types.dart","data":"YWJzdHJhY3QgY2xhc3MgRGF0YVR5cGVzIHsNCiAgLy8vIFRoZSBrbm93biBkYXRhIHR5cGUgdmFsdWVzDQogIHN0YXRpYyBMaXN0PFN0cmluZz4gdmFsdWVzID0gWw0KICAgICdTdHJpbmcnLA0KICAgICdudW0nLA0KICAgICdpbnQnLA0KICAgICdkb3VibGUnLA0KICAgICdib29sJywNCiAgICAnTGlzdCcsDQogICAgJ01hcCcsDQogICAgJ2R5bmFtaWMnLA0KICAgICdTZXQnLA0KICAgICdEYXRlVGltZScsDQogICAgJ051bGwnLA0KICBdOw0KfQ0K","type":"text"},{"path":"exceptions.dart","data":"Ly8vIFRoZSBiYXNlIG1vZGVsIGV4Y2VwdGlvbiBjbGFzcw0KYWJzdHJhY3QgY2xhc3MgTW9kZWxFeGNlcHRpb24gaW1wbGVtZW50cyBFeGNlcHRpb24ge30NCg0KLy8vIHtAdGVtcGxhdGUgcHVic3BlY19uYW1lX2V4Y2VwdGlvbn0NCi8vLyBUaGUgZXhjZXB0aW9uIHRoYXQgaXMgcmFpc2VkIHdoZW4gdGhlIGJyaWNrIGNhbm5vdCBmaW5kDQovLy8gYSBwdWJzcGVjIHlhbWwgbmFtZQ0KLy8vIHtAZW5kdGVtcGxhdGV9DQpjbGFzcyBQdWJzcGVjTmFtZUV4Y2VwdGlvbiBpbXBsZW1lbnRzIE1vZGVsRXhjZXB0aW9uIHsNCiAgLy8vIHtAbWFjcm8gcHVic3BlY19uYW1lX2V4Y2VwdGlvbn0NCiAgY29uc3QgUHVic3BlY05hbWVFeGNlcHRpb24oKTsNCn0NCg==","type":"text"},{"path":"json_ast/error.dart","data":"aW1wb3J0ICdkYXJ0OmNvcmUnOwppbXBvcnQgJ2RhcnQ6bWF0aCc7CgpjbGFzcyBTZXR0aW5ncyB7CiAgZmluYWwgaW50IGV4dHJhTGluZXM7CiAgZmluYWwgaW50IHRhYlNpemU7CiAgZmluYWwgYm9vbCBsb2M7CiAgZmluYWwgc291cmNlOwoKICBTZXR0aW5ncygKICAgICAge3RoaXMuZXh0cmFMaW5lcyA9IDIsCiAgICAgIHRoaXMudGFiU2l6ZSA9IDQsCiAgICAgIHRoaXMubG9jID0gdHJ1ZSwKICAgICAgdGhpcy5zb3VyY2UgPSBudWxsfSk7Cn0KClN0cmluZyByZXBlYXRTdHJpbmcoU3RyaW5nIHN0ciwgaW50IG4pIHsKICBpZiAobiA9PSAwKSB7CiAgICByZXR1cm4gJyc7CiAgfSBlbHNlIGlmIChuID09IDEpIHsKICAgIHJldHVybiBzdHI7CiAgfQogIGZpbmFsIHN0ckJ1ZiA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgc3RyQnVmLndyaXRlKHN0cik7CiAgfQogIHJldHVybiBzdHJCdWYudG9TdHJpbmcoKTsKfQoKU3RyaW5nIHByaW50TGluZSgKICAgIFN0cmluZyBsaW5lLCBpbnQgcG9zaXRpb24sIGludCBtYXhOdW1MZW5ndGgsIFNldHRpbmdzIHNldHRpbmdzKSB7CiAgZmluYWwgbiA9IHBvc2l0aW9uLnRvU3RyaW5nKCk7CiAgZmluYWwgZm9ybWF0dGVkTnVtID0gbi5wYWRMZWZ0KG1heE51bUxlbmd0aCk7CiAgZmluYWwgdGFiUmVwbGFjZW1lbnQgPSByZXBlYXRTdHJpbmcoJyAnLCBzZXR0aW5ncy50YWJTaXplKTsKICByZXR1cm4gZm9ybWF0dGVkTnVtICsgJyB8ICcgKyBsaW5lLnJlcGxhY2VBbGwoJ1x0JywgdGFiUmVwbGFjZW1lbnQpOwp9CgpTdHJpbmcgcHJpbnRMaW5lcyhMaXN0PFN0cmluZz4gbGluZXMsIGludCBzdGFydCwgaW50IGVuZCwgaW50IG1heE51bUxlbmd0aCwKICAgIFNldHRpbmdzIHNldHRpbmdzKSB7CiAgcmV0dXJuIGxpbmVzCiAgICAgIC5zdWJsaXN0KHN0YXJ0LCBlbmQpCiAgICAgIC5hc01hcCgpCiAgICAgIC5tYXAoKGksIGxpbmUpID0+CiAgICAgICAgICBNYXBFbnRyeShpLCBwcmludExpbmUobGluZSwgc3RhcnQgKyBpICsgMSwgbWF4TnVtTGVuZ3RoLCBzZXR0aW5ncykpKQogICAgICAudmFsdWVzCiAgICAgIC5qb2luKCdcbicpOwp9CgpTdHJpbmcgY29kZUVycm9yRnJhZ21lbnQoU3RyaW5nIGlucHV0LCBpbnQgbGluZVBvcywgaW50IGNvbHVtblBvcywKICAgIFtTZXR0aW5ncz8gc2V0dGluZ3NdKSB7CiAgZmluYWwgc3BsaXR0ZXIgPSBuZXcgUmVnRXhwKHIiXHJcbj98XG58XGYiKTsKICBmaW5hbCBsaW5lcyA9IGlucHV0LnNwbGl0KHNwbGl0dGVyKTsKICBzZXR0aW5ncyA9IHNldHRpbmdzICE9IG51bGwgPyBzZXR0aW5ncyA6IG5ldyBTZXR0aW5ncygpOwogIGZpbmFsIHN0YXJ0TGluZVBvcyA9IG1heCgxLCBsaW5lUG9zIC0gc2V0dGluZ3MuZXh0cmFMaW5lcykgLSAxOwogIGZpbmFsIGVuZExpbmVQb3MgPSBtaW4obGluZVBvcyArIHNldHRpbmdzLmV4dHJhTGluZXMsIGxpbmVzLmxlbmd0aCk7CiAgZmluYWwgbWF4TnVtTGVuZ3RoID0gZW5kTGluZVBvcy50b1N0cmluZygpLmxlbmd0aDsKICBmaW5hbCBwcmV2TGluZXMgPQogICAgICBwcmludExpbmVzKGxpbmVzLCBzdGFydExpbmVQb3MsIGxpbmVQb3MsIG1heE51bUxlbmd0aCwgc2V0dGluZ3MpOwogIGZpbmFsIHRhcmdldExpbmVCZWZvcmVDdXJzb3IgPSBwcmludExpbmUoCiAgICAgIGxpbmVzW2xpbmVQb3MgLSAxXS5zdWJzdHJpbmcoMCwgY29sdW1uUG9zIC0gMSksCiAgICAgIGxpbmVQb3MsCiAgICAgIG1heE51bUxlbmd0aCwKICAgICAgc2V0dGluZ3MpOwogIGZpbmFsIGN1cnNvckxpbmUgPSByZXBlYXRTdHJpbmcoJyAnLCB0YXJnZXRMaW5lQmVmb3JlQ3Vyc29yLmxlbmd0aCkgKyAnXic7CiAgZmluYWwgbmV4dExpbmVzID0KICAgICAgcHJpbnRMaW5lcyhsaW5lcywgbGluZVBvcywgZW5kTGluZVBvcywgbWF4TnVtTGVuZ3RoLCBzZXR0aW5ncyk7CgogIHJldHVybiBbcHJldkxpbmVzLCBjdXJzb3JMaW5lLCBuZXh0TGluZXNdCiAgICAgIC53aGVyZSgoYykgPT4gYyAhPSBudWxsICYmIGMgIT0gMCkKICAgICAgLmpvaW4oJ1xuJyk7Cn0KCmNsYXNzIEpTT05BU1RFeGNlcHRpb24gaW1wbGVtZW50cyBFeGNlcHRpb24gewogIGZpbmFsIFN0cmluZyByYXdNZXNzYWdlOwogIGZpbmFsIFN0cmluZz8gaW5wdXQ7CiAgZmluYWwgU3RyaW5nIHNvdXJjZTsKICBmaW5hbCBpbnQgbGluZTsKICBmaW5hbCBpbnQgY29sdW1uOwogIFN0cmluZz8gX21lc3NhZ2U7CgogIEpTT05BU1RFeGNlcHRpb24oCiAgICAgIHRoaXMucmF3TWVzc2FnZSwgdGhpcy5pbnB1dCwgdGhpcy5zb3VyY2UsIHRoaXMubGluZSwgdGhpcy5jb2x1bW4pIHsKICAgIGlmIChpbnB1dCAhPSBudWxsKSB7CiAgICAgIHRoaXMuX21lc3NhZ2UgPSBsaW5lICE9IDAKICAgICAgICAgID8gdGhpcy5yYXdNZXNzYWdlICsgJ1xuJyArIGNvZGVFcnJvckZyYWdtZW50KGlucHV0ISwgbGluZSwgY29sdW1uKQogICAgICAgICAgOiB0aGlzLnJhd01lc3NhZ2U7CiAgICB9IGVsc2UgewogICAgICB0aGlzLl9tZXNzYWdlID0gcmF3TWVzc2FnZTsKICAgIH0KICB9CgogIFN0cmluZz8gZ2V0IG1lc3NhZ2UgewogICAgcmV0dXJuIHRoaXMuX21lc3NhZ2U7CiAgfQp9Cg==","type":"text"},{"path":"json_ast/grapheme_splitter.dart","data":"","type":"text"},{"path":"json_ast/json_ast.dart","data":"ZXhwb3J0ICcuL2xvY2F0aW9uLmRhcnQnIHNob3cgTG9jLCBTZWdtZW50LCBMb2NhdGlvbjsKZXhwb3J0ICcuL3Rva2VuaXplLmRhcnQnCiAgICBzaG93CiAgICAgICAgTm9kZSwKICAgICAgICBWYWx1ZU5vZGUsCiAgICAgICAgT2JqZWN0Tm9kZSwKICAgICAgICBBcnJheU5vZGUsCiAgICAgICAgUHJvcGVydHlOb2RlLAogICAgICAgIExpdGVyYWxOb2RlLAogICAgICAgIFZhbHVlSW5kZXgsCiAgICAgICAgUG9zaXRpb247CmV4cG9ydCAnLi9wYXJzZS5kYXJ0JyBzaG93IHBhcnNlOwpleHBvcnQgJy4vZXJyb3IuZGFydCcgc2hvdyBKU09OQVNURXhjZXB0aW9uLCBTZXR0aW5nczsK","type":"text"},{"path":"json_ast/location.dart","data":"Y2xhc3MgTG9jIHsKICBmaW5hbCBpbnQgbGluZTsKICBmaW5hbCBpbnQgY29sdW1uOwoKICBMb2Moe3JlcXVpcmVkIHRoaXMubGluZSwgcmVxdWlyZWQgdGhpcy5jb2x1bW59KTsKfQoKY2xhc3MgU2VnbWVudCBleHRlbmRzIExvYyB7CiAgZmluYWwgaW50IG9mZnNldDsKCiAgU2VnbWVudChpbnQgbGluZSwgaW50IGNvbHVtbiwgdGhpcy5vZmZzZXQpCiAgICAgIDogc3VwZXIobGluZTogbGluZSwgY29sdW1uOiBjb2x1bW4pOwoKICBib29sIG9wZXJhdG9yID09KGR5bmFtaWMgb3RoZXIpID0+CiAgICAgIG90aGVyIGlzIFNlZ21lbnQgJiYKICAgICAgbGluZSA9PSBvdGhlci5saW5lICYmCiAgICAgIGNvbHVtbiA9PSBvdGhlci5jb2x1bW4gJiYKICAgICAgb2Zmc2V0ID09IG90aGVyLm9mZnNldDsKfQoKY2xhc3MgTG9jYXRpb24gewogIGZpbmFsIFNlZ21lbnQgc3RhcnQ7CiAgZmluYWwgU2VnbWVudCBlbmQ7CiAgZmluYWwgU3RyaW5nIHNvdXJjZTsKCiAgTG9jYXRpb24odGhpcy5zdGFydCwgdGhpcy5lbmQsIFt0aGlzLnNvdXJjZSA9ICIiXSk7CgogIGJvb2wgb3BlcmF0b3IgPT0oZHluYW1pYyBvdGhlcikgPT4KICAgICAgb3RoZXIgaXMgTG9jYXRpb24gJiYKICAgICAgc3RhcnQgPT0gb3RoZXIuc3RhcnQgJiYKICAgICAgZW5kID09IG90aGVyLmVuZCAmJgogICAgICBzb3VyY2UgPT0gb3RoZXIuc291cmNlOwoKICBzdGF0aWMgTG9jYXRpb24gY3JlYXRlKGludCBzdGFydExpbmUsIGludCBzdGFydENvbHVtbiwgaW50IHN0YXJ0T2Zmc2V0LAogICAgICBpbnQgZW5kTGluZSwgaW50IGVuZENvbHVtbiwgaW50IGVuZE9mZnNldCwKICAgICAgW1N0cmluZyBzb3VyY2UgPSAiIl0pIHsKICAgIGZpbmFsIHN0YXJ0U2VnbWVudCA9IG5ldyBTZWdtZW50KHN0YXJ0TGluZSwgc3RhcnRDb2x1bW4sIHN0YXJ0T2Zmc2V0KTsKICAgIGZpbmFsIGVuZFNlZ21lbnQgPSBuZXcgU2VnbWVudChlbmRMaW5lLCBlbmRDb2x1bW4sIGVuZE9mZnNldCk7CiAgICByZXR1cm4gbmV3IExvY2F0aW9uKHN0YXJ0U2VnbWVudCwgZW5kU2VnbWVudCwgc291cmNlKTsKICB9Cn0K","type":"text"},{"path":"json_ast/parse.dart","data":"","type":"text"},{"path":"json_ast/parse_error_types.dart","data":"U3RyaW5nIHVuZXhwZWN0ZWRFbmQoKSA9PiAnVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQnOwoKU3RyaW5nIHVuZXhwZWN0ZWRUb2tlbihTdHJpbmcgdG9rZW4sIFN0cmluZyBzb3VyY2UsIGludCBsaW5lLCBpbnQgY29sdW1uKSB7CiAgZmluYWwgc291cmNlT3JFbXB0eSA9IHNvdXJjZSAhPSAiIiA/ICckc291cmNlOicgOiAnJzsKICBmaW5hbCBwb3NpdGlvblN0ciA9ICckc291cmNlT3JFbXB0eSR7bGluZX06JGNvbHVtbic7CiAgcmV0dXJuICdVbmV4cGVjdGVkIHRva2VuIDwkdG9rZW4+IGF0ICRwb3NpdGlvblN0cic7Cn0K","type":"text"},{"path":"json_ast/tokenize.dart","data":"","type":"text"},{"path":"json_ast/tokenize_error_types.dart","data":"U3RyaW5nIHVuZXhwZWN0ZWRTeW1ib2woU3RyaW5nIHN5bWJvbCwgU3RyaW5nIHNvdXJjZSwgaW50IGxpbmUsIGludCBjb2x1bW4pIHsKICBmaW5hbCBzb3VyY2VPckVtcHR5ID0gc291cmNlICE9ICIiID8gJyRzb3VyY2U6JyA6ICcnOwogIGZpbmFsIHBvc2l0aW9uU3RyID0gJyRzb3VyY2VPckVtcHR5JHtsaW5lfTokY29sdW1uJzsKICByZXR1cm4gJ1VuZXhwZWN0ZWQgc3ltYm9sIDwkc3ltYm9sPiBhdCAkcG9zaXRpb25TdHInOwp9Cg==","type":"text"},{"path":"json_ast/utils/substring.dart","data":"aW1wb3J0ICdkYXJ0Om1hdGgnOwoKaW1wb3J0ICcuLi9ncmFwaGVtZV9zcGxpdHRlci5kYXJ0JzsKClN0cmluZyBzdWJzdHJpbmcoU3RyaW5nIHN0ciwgaW50IHN0YXJ0LCBbaW50PyBlbmRdKSB7CiAgaWYgKGVuZCA9PSBudWxsKSB7CiAgICBlbmQgPSBzdGFydCArIDE7CiAgfQogIGZpbmFsIHNwbGl0dGVyID0gR3JhcGhlbWVTcGxpdHRlcigpOwogIGZpbmFsIGl0ZXJhdG9yID0gc3BsaXR0ZXIuaXRlcmF0ZUdyYXBoZW1lcyhzdHIuc3Vic3RyaW5nKHN0YXJ0KSk7CiAgZmluYWwgc3RyQnVmZmVyID0gU3RyaW5nQnVmZmVyKCk7CiAgZm9yIChpbnQgaSA9IDA7IGkgPCBlbmQgLSBzdGFydDsgaSsrKSB7CiAgICBzdHJCdWZmZXIud3JpdGUoaXRlcmF0b3IuZWxlbWVudEF0KGkpKTsKICB9CiAgcmV0dXJuIHN0ckJ1ZmZlci50b1N0cmluZygpOwp9CgpTdHJpbmcgc2FmZVN1YnN0cmluZyhTdHJpbmcgc3RyLCBpbnQgc3RhcnQsIGludCBlbmQpIHsKICBmaW5hbCBsZW4gPSBzdHIubGVuZ3RoOwogIGlmIChsZW4gPiBzdGFydCkgewogICAgZmluYWwgbGFzdEluZGV4ID0gbWluKGxlbiwgZW5kKTsKICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKHN0YXJ0LCBsYXN0SW5kZXgpOwogIH0KICByZXR1cm4gJyc7Cn0K","type":"text"},{"path":"json_handler/helpers.dart","data":"","type":"text"},{"path":"json_handler/json_to_dart.dart","data":"ZXhwb3J0ICcuL21vZGVsX2dlbmVyYXRvci5kYXJ0JzsK","type":"text"},{"path":"json_handler/model_generator.dart","data":"aW1wb3J0ICdkYXJ0OmNvbGxlY3Rpb24nOwoKaW1wb3J0ICcuLi9qc29uX2FzdC9qc29uX2FzdC5kYXJ0JzsKaW1wb3J0ICdoZWxwZXJzLmRhcnQnOwppbXBvcnQgJ3N5bnRheC5kYXJ0JzsKCmNsYXNzIERhcnRDb2RlIGV4dGVuZHMgV2l0aFdhcm5pbmc8U3RyaW5nPiB7CiAgRGFydENvZGUoU3RyaW5nIHJlc3VsdCwgTGlzdDxXYXJuaW5nPiB3YXJuaW5ncykgOiBzdXBlcihyZXN1bHQsIHdhcm5pbmdzKTsKCiAgU3RyaW5nIGdldCBjb2RlID0+IHRoaXMucmVzdWx0Owp9CgovLy8gQSBIaW50IGlzIGEgdXNlciB0eXBlIGNvcnJlY3Rpb24uCmNsYXNzIEhpbnQgewogIGZpbmFsIFN0cmluZyBwYXRoOwogIGZpbmFsIFN0cmluZyB0eXBlOwoKICBIaW50KHRoaXMucGF0aCwgdGhpcy50eXBlKTsKfQoKY2xhc3MgTW9kZWxHZW5lcmF0b3IgewogIGZpbmFsIFN0cmluZyBfcm9vdENsYXNzTmFtZTsKICBMaXN0PENsYXNzRGVmaW5pdGlvbj4gYWxsQ2xhc3NlcyA9IDxDbGFzc0RlZmluaXRpb24+W107CiAgZmluYWwgTWFwPFN0cmluZywgU3RyaW5nPiBzYW1lQ2xhc3NNYXBwaW5nID0gbmV3IEhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+KCk7CiAgbGF0ZSBMaXN0PEhpbnQ+IGhpbnRzOwoKICBNb2RlbEdlbmVyYXRvcih0aGlzLl9yb290Q2xhc3NOYW1lLCBbaGludHNdKSB7CiAgICBpZiAoaGludHMgIT0gbnVsbCkgewogICAgICB0aGlzLmhpbnRzID0gaGludHM7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmhpbnRzID0gPEhpbnQ+W107CiAgICB9CiAgfQoKICBIaW50PyBfaGludEZvclBhdGgoU3RyaW5nIHBhdGgpIHsKICAgIGZpbmFsIGhpbnQgPSB0aGlzCiAgICAgICAgLmhpbnRzCiAgICAgICAgLmZpcnN0V2hlcmUoKGgpID0+IGgucGF0aCA9PSBwYXRoLCBvckVsc2U6ICgpID0+IEhpbnQoIiIsICIiKSk7CiAgICBpZiAoaGludC5wYXRoID09ICIiKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgcmV0dXJuIG51bGw7CiAgfQoKICBMaXN0PFdhcm5pbmc+IF9nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbihTdHJpbmcgY2xhc3NOYW1lLAogICAgICBkeW5hbWljIGpzb25SYXdEeW5hbWljRGF0YSwgU3RyaW5nIHBhdGgsIE5vZGU/IGFzdE5vZGUpIHsKICAgIExpc3Q8V2FybmluZz4gd2FybmluZ3MgPSA8V2FybmluZz5bXTsKICAgIGlmIChqc29uUmF3RHluYW1pY0RhdGEgaXMgTGlzdCkgewogICAgICAvLyBpZiBmaXJzdCBlbGVtZW50IGlzIGFuIGFycmF5LCBzdGFydCBpbiB0aGUgZmlyc3QgZWxlbWVudC4KICAgICAgZmluYWwgbm9kZSA9IG5hdmlnYXRlTm9kZShhc3ROb2RlLCAnMCcpOwogICAgICBfZ2VuZXJhdGVDbGFzc0RlZmluaXRpb24oY2xhc3NOYW1lLCBqc29uUmF3RHluYW1pY0RhdGFbMF0sIHBhdGgsIG5vZGUhKTsKICAgIH0gZWxzZSB7CiAgICAgIGZpbmFsIE1hcDxkeW5hbWljLCBkeW5hbWljPiBqc29uUmF3RGF0YSA9IGpzb25SYXdEeW5hbWljRGF0YTsKICAgICAgZmluYWwga2V5cyA9IGpzb25SYXdEYXRhLmtleXM7CiAgICAgIENsYXNzRGVmaW5pdGlvbiBjbGFzc0RlZmluaXRpb24gPSBuZXcgQ2xhc3NEZWZpbml0aW9uKGNsYXNzTmFtZSk7CiAgICAgIGtleXMuZm9yRWFjaCgoa2V5KSB7CiAgICAgICAgVHlwZURlZmluaXRpb24gdHlwZURlZjsKICAgICAgICBmaW5hbCBoaW50ID0gX2hpbnRGb3JQYXRoKCckcGF0aC8ka2V5Jyk7CiAgICAgICAgZmluYWwgbm9kZSA9IG5hdmlnYXRlTm9kZShhc3ROb2RlLCBrZXkpOwogICAgICAgIGlmIChoaW50ICE9IG51bGwpIHsKICAgICAgICAgIHR5cGVEZWYgPSBuZXcgVHlwZURlZmluaXRpb24oaGludC50eXBlLCBhc3ROb2RlOiBub2RlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdHlwZURlZiA9IG5ldyBUeXBlRGVmaW5pdGlvbi5mcm9tRHluYW1pYyhqc29uUmF3RGF0YVtrZXldLCBub2RlKTsKICAgICAgICB9CiAgICAgICAgaWYgKHR5cGVEZWYubmFtZSA9PSAnQ2xhc3MnKSB7CiAgICAgICAgICB0eXBlRGVmLm5hbWUgPSBjYW1lbENhc2Uoa2V5KTsKICAgICAgICB9CiAgICAgICAgaWYgKHR5cGVEZWYubmFtZSA9PSAnTGlzdCcgJiYgdHlwZURlZi5zdWJ0eXBlID09ICdOdWxsJykgewogICAgICAgICAgd2FybmluZ3MuYWRkKG5ld0VtcHR5TGlzdFdhcm4oJyRwYXRoLyRrZXknKSk7CiAgICAgICAgfQogICAgICAgIGlmICh0eXBlRGVmLnN1YnR5cGUgIT0gbnVsbCAmJiB0eXBlRGVmLnN1YnR5cGUgPT0gJ0NsYXNzJykgewogICAgICAgICAgdHlwZURlZi5zdWJ0eXBlID0gY2FtZWxDYXNlKGtleSk7CiAgICAgICAgfQogICAgICAgIGlmICh0eXBlRGVmLmlzQW1iaWd1b3VzKSB7CiAgICAgICAgICB3YXJuaW5ncy5hZGQobmV3QW1iaWd1b3VzTGlzdFdhcm4oJyRwYXRoLyRrZXknKSk7CiAgICAgICAgfQogICAgICAgIGNsYXNzRGVmaW5pdGlvbi5hZGRGaWVsZChrZXksIHR5cGVEZWYpOwogICAgICB9KTsKCiAgICAgIGFsbENsYXNzZXMuYWRkKGNsYXNzRGVmaW5pdGlvbik7CgogICAgICBmaW5hbCBkZXBlbmRlbmNpZXMgPSBjbGFzc0RlZmluaXRpb24uZGVwZW5kZW5jaWVzOwogICAgICBkZXBlbmRlbmNpZXMuZm9yRWFjaCgoZGVwZW5kZW5jeSkgewogICAgICAgIExpc3Q8V2FybmluZz4gd2FybnMgPSA8V2FybmluZz5bXTsKICAgICAgICBpZiAoZGVwZW5kZW5jeS50eXBlRGVmLm5hbWUgPT0gJ0xpc3QnKSB7CiAgICAgICAgICAvLyBvbmx5IGdlbmVyYXRlIGRlcGVuZGVuY3kgY2xhc3MgaWYgdGhlIGFycmF5IGlzIG5vdCBlbXB0eQogICAgICAgICAgaWYgKGpzb25SYXdEYXRhW2RlcGVuZGVuY3kubmFtZV0ubGVuZ3RoID4gMCkgewogICAgICAgICAgICAvLyB3aGVuIGxpc3QgaGFzIGFtYmlndW91cyB2YWx1ZXMsIHRha2UgdGhlIGZpcnN0IG9uZSwgb3RoZXJ3aXNlIG1lcmdlIGFsbCBvYmplY3RzCiAgICAgICAgICAgIC8vIGludG8gYSBzaW5nbGUgb25lCiAgICAgICAgICAgIGR5bmFtaWMgdG9BbmFseXplOwogICAgICAgICAgICBpZiAoIWRlcGVuZGVuY3kudHlwZURlZi5pc0FtYmlndW91cykgewogICAgICAgICAgICAgIFdpdGhXYXJuaW5nPE1hcD4gbWVyZ2VXaXRoV2FybmluZyA9IG1lcmdlT2JqZWN0TGlzdCgKICAgICAgICAgICAgICAgICAganNvblJhd0RhdGFbZGVwZW5kZW5jeS5uYW1lXSwgJyRwYXRoLyR7ZGVwZW5kZW5jeS5uYW1lfScpOwogICAgICAgICAgICAgIHRvQW5hbHl6ZSA9IG1lcmdlV2l0aFdhcm5pbmcucmVzdWx0OwogICAgICAgICAgICAgIHdhcm5pbmdzLmFkZEFsbChtZXJnZVdpdGhXYXJuaW5nLndhcm5pbmdzKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0b0FuYWx5emUgPSBqc29uUmF3RGF0YVtkZXBlbmRlbmN5Lm5hbWVdWzBdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZpbmFsIG5vZGUgPSBuYXZpZ2F0ZU5vZGUoYXN0Tm9kZSwgZGVwZW5kZW5jeS5uYW1lKTsKICAgICAgICAgICAgd2FybnMgPSBfZ2VuZXJhdGVDbGFzc0RlZmluaXRpb24oZGVwZW5kZW5jeS5jbGFzc05hbWUsIHRvQW5hbHl6ZSwKICAgICAgICAgICAgICAgICckcGF0aC8ke2RlcGVuZGVuY3kubmFtZX0nLCBub2RlKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgZmluYWwgbm9kZSA9IG5hdmlnYXRlTm9kZShhc3ROb2RlLCBkZXBlbmRlbmN5Lm5hbWUpOwogICAgICAgICAgd2FybnMgPSBfZ2VuZXJhdGVDbGFzc0RlZmluaXRpb24oZGVwZW5kZW5jeS5jbGFzc05hbWUsCiAgICAgICAgICAgICAganNvblJhd0RhdGFbZGVwZW5kZW5jeS5uYW1lXSwgJyRwYXRoLyR7ZGVwZW5kZW5jeS5uYW1lfScsIG5vZGUpOwogICAgICAgIH0KICAgICAgICB3YXJuaW5ncy5hZGRBbGwod2FybnMpOwogICAgICB9KTsKICAgIH0KICAgIHJldHVybiB3YXJuaW5nczsKICB9CgogIExpc3Q8Q2xhc3NEZWZpbml0aW9uPiBnZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbnMoU3RyaW5nIHJhd0pzb24pIHsKICAgIGZpbmFsIGpzb25SYXdEYXRhID0gZGVjb2RlSlNPTihyYXdKc29uKTsKICAgIGZpbmFsIGFzdE5vZGUgPSBwYXJzZShyYXdKc29uLCBTZXR0aW5ncygpKTsKICAgIF9nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbihfcm9vdENsYXNzTmFtZSwganNvblJhd0RhdGEsICIiLCBhc3ROb2RlKTsKICAgIGFsbENsYXNzZXMuZm9yRWFjaCgoYykgewogICAgICBmaW5hbCBmaWVsZHNLZXlzID0gYy5maWVsZHMua2V5czsKICAgICAgZmllbGRzS2V5cy5mb3JFYWNoKChmKSB7CiAgICAgICAgZmluYWwgdHlwZUZvckZpZWxkID0gYy5maWVsZHNbZl07CiAgICAgICAgaWYgKHR5cGVGb3JGaWVsZCAhPSBudWxsKSB7CiAgICAgICAgICBpZiAoc2FtZUNsYXNzTWFwcGluZy5jb250YWluc0tleSh0eXBlRm9yRmllbGQubmFtZSkpIHsKICAgICAgICAgICAgYy5maWVsZHNbZl0hLm5hbWUgPSBzYW1lQ2xhc3NNYXBwaW5nW3R5cGVGb3JGaWVsZC5uYW1lXSE7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogICAgcmV0dXJuIGFsbENsYXNzZXM7CiAgfQoKICBMaXN0PENsYXNzRGVmaW5pdGlvbj4gZ2VuZXJhdGVDbGFzc2VzKFN0cmluZyByYXdKc29uKSB7CiAgICByZXR1cm4gZ2VuZXJhdGVDbGFzc0RlZmluaXRpb25zKHJhd0pzb24pOwogIH0KfQo=","type":"text"},{"path":"json_handler/syntax.dart","data":"","type":"text"},{"path":"json_handler/warning.dart","data":"Y2xhc3MgV2FybmluZyB7CiAgZmluYWwgU3RyaW5nIHdhcm5pbmc7CiAgZmluYWwgU3RyaW5nIHBhdGg7CgogIFdhcm5pbmcodGhpcy53YXJuaW5nLCB0aGlzLnBhdGgpOwp9CgpjbGFzcyBXaXRoV2FybmluZzxUPiB7CiAgZmluYWwgVCByZXN1bHQ7CiAgZmluYWwgTGlzdDxXYXJuaW5nPiB3YXJuaW5nczsKCiAgV2l0aFdhcm5pbmcodGhpcy5yZXN1bHQsIHRoaXMud2FybmluZ3MpOwp9Cg==","type":"text"},{"path":"model_service.dart","data":"aW1wb3J0ICdkYXJ0OmNvbnZlcnQnOw0KaW1wb3J0ICdkYXJ0OmlvJzsNCg0KaW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOnlhbWwveWFtbC5kYXJ0JzsNCg0KaW1wb3J0ICdkYXRhX3R5cGVzLmRhcnQnOw0KaW1wb3J0ICdleGNlcHRpb25zLmRhcnQnOw0KaW1wb3J0ICdwcm9wZXJ0eS5kYXJ0JzsNCmltcG9ydCAnc3RyaW5nX2V4dGVuc2lvbnMuZGFydCc7DQoNCmFic3RyYWN0IGNsYXNzIE1vZGVsU2VydmljZSB7DQogIC8vLyBWZXJpZmllcyBpZiB0aGUgc2VlZGVkIHByb3BlcnRpZXMgLyBjb25maWcgaXMgYWNjZXB0YWJsZQ0KICBzdGF0aWMgdm9pZCB2ZXJpZnlTZWVkZWRQcm9wZXJ0aWVzKA0KICAgIExpc3Q8ZHluYW1pYz4gc2VlZGVkUHJvcGVydGllcywNCiAgICBMb2dnZXIgbG9nZ2VyLA0KICApIHsNCiAgICBmb3IgKGZpbmFsIHByb3BlcnR5IGluIHNlZWRlZFByb3BlcnRpZXMpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgd2UgY2Fubm90IGRlY29kZSB0aGUganNvbg0KICAgICAgICBQcm9wZXJ0eS5mcm9tSnNvbihqc29uRW5jb2RlKHByb3BlcnR5KSk7DQogICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgIGxvZ2dlci5lcnIoJycnDQpDb3VsZCBub3QgcGFyc2UgcHJvcGVydHk6ICRwcm9wZXJ0eQ0KUGxlYXNlIGNoZWNrIHRoZSB2YXJpYWJsZSBuYW1lcyBvZiB5b3VyIHByb3BlcnRpZXMuIEl0IHNob3VsZCBiZSBhbG9uZyB0aGUgbGluZXMgb2Y6DQp7ICJuYW1lIjogImZpcnN0TmFtZSIsICJ0eXBlIjogIlN0cmluZyIgfQ0KJycnKTsNCiAgICAgICAgZXhpdCgwKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCg0KICAvLy8gQWRkcyBwcm9wZXJ0aWVzIHRvIHRoZSBtb2RlbCB1bnRpbCB0aGUgdXNlciBlc2NhcGVzIGJ5IGVudGVyaW5nIGBlYC4NCiAgc3RhdGljIHZvaWQgYWRkUHJvcGVydGllcygNCiAgICBMb2dnZXIgbG9nZ2VyLA0KICAgIExpc3Q8TWFwPFN0cmluZywgZHluYW1pYz4+IHByb3BlcnRpZXMsDQogICkgew0KICAgIGxvZ2dlcg0KICAgICAgLi5pbmZvKGxpZ2h0WWVsbG93LndyYXAoJ2VudGVyIGBlYCB0byBleGl0IGFkZGluZyBwcm9wZXJ0aWVzJykpDQogICAgICAuLmluZm8oDQogICAgICAgIGxpZ2h0WWVsbG93DQogICAgICAgICAgICAud3JhcCgnRm9ybWF0OiBkYXRhVHlwZSBwcm9wZXJ0eU5hbWUgZS5nLCBTdHJpbmcgbXlQcm9wZXJ0eTonKSwNCiAgICAgICk7DQoNCiAgICB3aGlsZSAodHJ1ZSkgew0KICAgICAgZmluYWwgcHJvcGVydHkgPQ0KICAgICAgICAgIGxvZ2dlci5wcm9tcHQoJzonKS5yZXBsYWNlQWxsKFJlZ0V4cChyJ1xzKycpLCAnICcpLnRyaW0oKTsNCiAgICAgIGlmIChwcm9wZXJ0eS50b0xvd2VyQ2FzZSgpID09ICdlJykgew0KICAgICAgICBicmVhazsNCiAgICAgIH0NCg0KICAgICAgaWYgKCFwcm9wZXJ0eS5jb250YWlucygnICcpKSB7DQogICAgICAgIGxvZ2dlci5hbGVydCgNCiAgICAgICAgICAnVGhhdCB3YXMgbm90IGEgdmFsaWQgZm9ybWF0IC0+IGRhdGFUeXBlIHByb3BlcnR5TmFtZSBlLmcsIFN0cmluZyBteVByb3BlcnR5JywNCiAgICAgICAgKTsNCiAgICAgICAgY29udGludWU7DQogICAgICB9DQoNCiAgICAgIGlmICgocHJvcGVydHkuY29udGFpbnMoJzwnKSAmJiAhcHJvcGVydHkuY29udGFpbnMoJz4nKSkgfHwNCiAgICAgICAgICAocHJvcGVydHkuY29udGFpbnMoJz4nKSAmJiAhcHJvcGVydHkuY29udGFpbnMoJzwnKSkpIHsNCiAgICAgICAgbG9nZ2VyLmFsZXJ0KA0KICAgICAgICAgICdJdCBzZWVtcyB5b3UgYXJlIG1pc3NpbmcgYSA8IG9yID4sIHBsZWFzZSByZXR5cGUgdGhpcyBwcm9wZXJ0eScsDQogICAgICAgICk7DQogICAgICAgIGNvbnRpbnVlOw0KICAgICAgfQ0KDQogICAgICBmaW5hbCBzcGxpdFByb3BlcnR5ID0gcHJvcGVydHkuc3BsaXQoJyAnKTsNCiAgICAgIGZpbmFsIHByb3BlcnR5VHlwZSA9IHNwbGl0UHJvcGVydHlbMF07DQogICAgICBmaW5hbCBwcm9wZXJ0eU5hbWUgPSBzcGxpdFByb3BlcnR5WzFdOw0KICAgICAgYWRkUHJvcGVydHkoDQogICAgICAgIHByb3BlcnRpZXMsDQogICAgICAgIFByb3BlcnR5KA0KICAgICAgICAgIG5hbWU6IHByb3BlcnR5TmFtZSwNCiAgICAgICAgICB0eXBlOiBwcm9wZXJ0eVR5cGUsDQogICAgICAgICAgaXNOdWxsYWJsZTogcHJvcGVydHlUeXBlLmVuZHNXaXRoKCc/JyksDQogICAgICAgICksDQogICAgICApOw0KICAgIH0NCiAgfQ0KDQogIC8vLyBBZGRzIGEgW3Byb3BlcnR5XSB0byB0aGUgW3Byb3BlcnRpZXNdIGxpc3QuDQogIHN0YXRpYyB2b2lkIGFkZFByb3BlcnR5KA0KICAgIExpc3Q8TWFwPFN0cmluZywgZHluYW1pYz4+IHByb3BlcnRpZXMsDQogICAgUHJvcGVydHkgcHJvcGVydHksDQogICkgew0KICAgIGZpbmFsIGhhc1NwZWNpYWwgPSBwcm9wZXJ0eS50eXBlLnRvTG93ZXJDYXNlKCkuY29udGFpbnMoJzwnKSB8fA0KICAgICAgICBwcm9wZXJ0eS50eXBlLnRvTG93ZXJDYXNlKCkuY29udGFpbnMoJz4nKTsNCiAgICBmaW5hbCBsaXN0UHJvcGVydGllcyA9IGdldEN1c3RvbUxpc3RQcm9wZXJ0aWVzKGhhc1NwZWNpYWwsIHByb3BlcnR5LnR5cGUpOw0KICAgIGZpbmFsIGlzQ3VzdG9tRGF0YVR5cGUgPQ0KICAgICAgICAhRGF0YVR5cGVzLnZhbHVlcy5jb250YWlucyhwcm9wZXJ0eS50eXBlLmNsZWFuZWQpICYmICFoYXNTcGVjaWFsOw0KICAgIHByb3BlcnRpZXMNCiAgICAgIC4uZm9yRWFjaCgoZSkgPT4gZVsnaXNMYXN0UHJvcGVydHknXSA9IGZhbHNlKQ0KICAgICAgLi5hZGQoew0KICAgICAgICAnbmFtZSc6IHByb3BlcnR5Lm5hbWUsDQogICAgICAgICd0eXBlJzogcHJvcGVydHkudHlwZSwNCiAgICAgICAgJ2lzTnVsbGFibGUnOiBwcm9wZXJ0eS5pc051bGxhYmxlLA0KICAgICAgICAnaGFzU3BlY2lhbCc6IGhhc1NwZWNpYWwsDQogICAgICAgICdpc0N1c3RvbURhdGFUeXBlJzogaXNDdXN0b21EYXRhVHlwZSwNCiAgICAgICAgJ2lzTGFzdFByb3BlcnR5JzogdHJ1ZSwNCiAgICAgICAgLi4ubGlzdFByb3BlcnRpZXMsDQogICAgICB9KTsNCiAgfQ0KDQogIC8vLyBDaGVja3MgdG8gc2VlIGlmIHRoZSBjdXJyZW50IG91dHB1dCBkaXJlY3RvcnkgaXMgaW4gdGhlIGxpYiBmb2xkZXIuDQogIC8vLyBBZGRzIHRoZSBmdWxsUGF0aCB0byB0aGUgY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeQ0KICBzdGF0aWMgRnV0dXJlPHZvaWQ+IHZhbGlkYXRlRGlyZWN0b3J5KEhvb2tDb250ZXh0IGNvbnRleHQpIGFzeW5jIHsNCiAgICBmaW5hbCBsb2dnZXIgPSBjb250ZXh0LmxvZ2dlcjsNCiAgICBmaW5hbCBkaXJlY3RvcnkgPSBEaXJlY3RvcnkuY3VycmVudC5wYXRoOw0KDQogICAgdHJ5IHsNCiAgICAgIExpc3Q8U3RyaW5nPiBmb2xkZXJzOw0KDQogICAgICBpZiAoUGxhdGZvcm0uaXNXaW5kb3dzKSB7DQogICAgICAgIGZvbGRlcnMgPSBkaXJlY3Rvcnkuc3BsaXQocidcJykudG9MaXN0KCk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBmb2xkZXJzID0gZGlyZWN0b3J5LnNwbGl0KCcvJykudG9MaXN0KCk7DQogICAgICB9DQogICAgICBmaW5hbCBsaWJJbmRleCA9IGZvbGRlcnMuaW5kZXhXaGVyZSgoZm9sZGVyKSA9PiBmb2xkZXIgPT0gJ2xpYicpOw0KICAgICAgZmluYWwgbW9kZWxQYXRoID0gZm9sZGVycy5zdWJsaXN0KGxpYkluZGV4ICsgMSwgZm9sZGVycy5sZW5ndGgpLmpvaW4oJy8nKTsNCiAgICAgIGZpbmFsIHB1YlNwZWNGaWxlID0NCiAgICAgICAgICBGaWxlKCcke2ZvbGRlcnMuc3VibGlzdCgwLCBsaWJJbmRleCkuam9pbignLycpfS9wdWJzcGVjLnlhbWwnKTsNCiAgICAgIGZpbmFsIGNvbnRlbnQgPSBhd2FpdCBwdWJTcGVjRmlsZS5yZWFkQXNTdHJpbmcoKTsNCiAgICAgIGZpbmFsIHlhbWxNYXAgPSBsb2FkWWFtbChjb250ZW50KTsNCiAgICAgIGZpbmFsIHBhY2thZ2VOYW1lID0geWFtbE1hcFsnbmFtZSddIGFzIFN0cmluZzsNCiAgICAgIGNvbnRleHQudmFycyA9IHsNCiAgICAgICAgLi4uY29udGV4dC52YXJzLA0KICAgICAgICAnZnVsbFBhdGgnOiAnJHBhY2thZ2VOYW1lLyRtb2RlbFBhdGgvJy5yZXBsYWNlQWxsKCcvLycsICcvJyksDQogICAgICB9Ow0KICAgIH0gb24gUmFuZ2VFcnJvciBjYXRjaCAoXykgew0KICAgICAgbG9nZ2VyDQogICAgICAgIC4uYWxlcnQoDQogICAgICAgICAgcmVkLndyYXAoDQogICAgICAgICAgICAnQ291bGQgbm90IGZpbmQgbGliIGZvbGRlciBpbiAkZGlyZWN0b3J5JywNCiAgICAgICAgICApLA0KICAgICAgICApDQogICAgICAgIC4uYWxlcnQoDQogICAgICAgICAgcmVkLndyYXAoDQogICAgICAgICAgICAnUmUtcnVuIHRoaXMgYnJpY2sgaW5zaWRlIHlvdXIgbGliIGZvbGRlcicsDQogICAgICAgICAgKSwNCiAgICAgICAgKTsNCiAgICAgIHRocm93IEV4Y2VwdGlvbigpOw0KICAgIH0gb24gRmlsZVN5c3RlbUV4Y2VwdGlvbiBjYXRjaCAoXykgew0KICAgICAgbG9nZ2VyLmFsZXJ0KA0KICAgICAgICByZWQud3JhcCgNCiAgICAgICAgICAnQ291bGQgbm90IGZpbmQgcHVic3BlYy55YW1sIGZvbGRlciBpbiAke2RpcmVjdG9yeS5yZXBsYWNlQWxsKHInXGxpYicsICcnKX0nLA0KICAgICAgICApLA0KICAgICAgKTsNCg0KICAgICAgdGhyb3cgRXhjZXB0aW9uKCk7DQogICAgfSBvbiBQdWJzcGVjTmFtZUV4Y2VwdGlvbiBjYXRjaCAoXykgew0KICAgICAgbG9nZ2VyDQogICAgICAgIC4uYWxlcnQoDQogICAgICAgICAgcmVkLndyYXAoDQogICAgICAgICAgICAnQ291bGQgbm90IHJlYWQgcGFja2FnZSBuYW1lIGluIHB1YnNwZWMueWFtbCcsDQogICAgICAgICAgKSwNCiAgICAgICAgKQ0KICAgICAgICAuLmFsZXJ0KA0KICAgICAgICAgIHJlZC53cmFwKA0KICAgICAgICAgICAgJ0RvZXMgeW91ciBwdWJzcGVjIGhhdmUgYSBuYW1lID8nLA0KICAgICAgICAgICksDQogICAgICAgICk7DQogICAgICB0aHJvdyBFeGNlcHRpb24oKTsNCiAgICB9IG9uIEV4Y2VwdGlvbiBjYXRjaCAoXykgew0KICAgICAgcmV0aHJvdzsNCiAgICB9DQogIH0NCg0KICAvLy8gQ2hlY2tzIHRvIHNlZSBpZiB0aGUgcHJvcGVydHkgdHlwZSBpcyBzcGVjaWFsLg0KICAvLy8NCiAgLy8vIFRoaXMgY2hlY2sgaXMgcmVxdWlyZWQgZHVlIHRvIHRoZSBtdXN0YWNoZSBzeW50YXg6DQogIC8vLyBBbGwgdmFyaWFibGVzIGFyZSBIVE1MIGVzY2FwZWQgYnkgZGVmYXVsdC4gSWYgeW91IHdhbnQNCiAgLy8vIHRvIHJldHVybiB1bmVzY2FwZWQgSFRNTCwgdXNlIHRoZSB0cmlwbGUgbXVzdGFjaGU6IHt7e25hbWV9fX0uDQogIC8vLw0KICAvLy8gcmV0dXJucyBhIFtNYXA8U3RyaW5nLCBkeW5hbWljPl0gY29udGFpbmluZyB0aGUgcHJvcGVydGllcyB2YXJpYWJsZXMNCiAgc3RhdGljIE1hcDxTdHJpbmcsIGR5bmFtaWM+IGdldEN1c3RvbUxpc3RQcm9wZXJ0aWVzKA0KICAgIGJvb2wgaGFzU3BlY2lhbCwNCiAgICBTdHJpbmcgcHJvcGVydHlUeXBlLA0KICApIHsNCiAgICBpZiAoIWhhc1NwZWNpYWwgfHwgIXByb3BlcnR5VHlwZS5jb250YWlucygnTGlzdCcpKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICAnaXNDdXN0b21MaXN0JzogZmFsc2UsDQogICAgICB9Ow0KICAgIH0NCiAgICBmaW5hbCBzdGFydEluZGV4ID0gcHJvcGVydHlUeXBlLmluZGV4T2YoJzwnKTsNCiAgICBmaW5hbCBlbmRJbmRleCA9IHByb3BlcnR5VHlwZS5pbmRleE9mKCc+Jyk7DQogICAgZmluYWwgbGlzdFR5cGUgPSBwcm9wZXJ0eVR5cGUuc3Vic3RyaW5nKHN0YXJ0SW5kZXggKyAxLCBlbmRJbmRleCkudHJpbSgpOw0KICAgIGlmIChEYXRhVHlwZXMudmFsdWVzLmNvbnRhaW5zKGxpc3RUeXBlLmNsZWFuZWQpKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICAnaXNDdXN0b21MaXN0JzogZmFsc2UsDQogICAgICB9Ow0KICAgIH0NCiAgICByZXR1cm4gew0KICAgICAgJ2lzQ3VzdG9tTGlzdCc6IHRydWUsDQogICAgICAnY3VzdG9tTGlzdFR5cGUnOiBsaXN0VHlwZSwNCiAgICB9Ow0KICB9DQp9DQo=","type":"text"},{"path":"post_gen.dart","data":"aW1wb3J0ICdkYXJ0OmlvJzsNCg0KaW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvbW9kZWxfZ2VuZXJhdG9yLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvc3ludGF4LmRhcnQnOw0KaW1wb3J0ICdtb2RlbF9idW5kbGUuZGFydCc7DQppbXBvcnQgJ3JlY2FzZS5kYXJ0JzsNCmltcG9ydCAncHJlX2dlbi5kYXJ0JyBhcyBwcmVfZ2VuOw0KDQpGdXR1cmU8dm9pZD4gcnVuKEhvb2tDb250ZXh0IGNvbnRleHQpIGFzeW5jIHsNCiAgZmluYWwgdXNlc0ZyZWV6ZWQgPSBjb250ZXh0LnZhcnNbJ3VzZV9mcmVlemVkJ10gYXMgYm9vbDsNCiAgZmluYWwgbG9nZ2VyID0gY29udGV4dC5sb2dnZXI7DQogIGZpbmFsIGRpcmVjdG9yeSA9IERpcmVjdG9yeS5jdXJyZW50LnBhdGg7DQogIExpc3Q8U3RyaW5nPiBmb2xkZXJzOw0KDQogIGlmIChQbGF0Zm9ybS5pc1dpbmRvd3MpIHsNCiAgICBmb2xkZXJzID0gZGlyZWN0b3J5LnNwbGl0KHInXCcpLnRvTGlzdCgpOw0KICB9IGVsc2Ugew0KICAgIGZvbGRlcnMgPSBkaXJlY3Rvcnkuc3BsaXQoJy8nKS50b0xpc3QoKTsNCiAgfQ0KDQogIGZpbmFsIGhhc0pzb24gPSBjb250ZXh0LnZhcnNbJ2pzb24nXSAhPSBudWxsICYmDQogICAgICBjb250ZXh0LnZhcnNbJ2pzb24nXSBpcyBTdHJpbmcgJiYNCiAgICAgIChjb250ZXh0LnZhcnNbJ2pzb24nXSBhcyBTdHJpbmcpLmlzTm90RW1wdHk7DQoNCiAgaWYgKGhhc0pzb24pIHsNCiAgICBmaW5hbCBqc29uSW5kZXggPSAoY29udGV4dC52YXJzWydqc29uSW5kZXgnXSBhcyBpbnQpICsgMTsNCiAgICBmaW5hbCBjbGFzc2VzID0gTW9kZWxHZW5lcmF0b3IoY29udGV4dC52YXJzWydtb2RlbF9uYW1lJ10pDQogICAgICAgIC5nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbnMoY29udGV4dC52YXJzWydqc29uJ10gYXMgU3RyaW5nKTsNCg0KICAgIGZpbmFsIGNsYXNzVG9QYXJzZSA9DQogICAgICAgIGNsYXNzZXMubGVuZ3RoIC0gMSA+PSBqc29uSW5kZXggPyBjbGFzc2VzW2pzb25JbmRleF0gOiBudWxsOw0KICAgIGZpbmFsIGNsYXNzRmllbGRzVG9QYXJzZSA9IGNsYXNzVG9QYXJzZSAhPSBudWxsDQogICAgICAgID8gY2xhc3Nlc1tqc29uSW5kZXhdLmZpZWxkcw0KICAgICAgICA6IDxTdHJpbmcsIFR5cGVEZWZpbml0aW9uPnt9Ow0KDQogICAgZmluYWwgcHJvcGVydGllc0Zyb21Kc29uID0gPE1hcDxTdHJpbmcsIGR5bmFtaWM+PlsNCiAgICAgIC4uLmNsYXNzRmllbGRzVG9QYXJzZS5rZXlzLm1hcCgNCiAgICAgICAgKGUpIHsNCiAgICAgICAgICBmaW5hbCB2YWx1ZSA9IGNsYXNzRmllbGRzVG9QYXJzZS5lbnRyaWVzDQogICAgICAgICAgICAgIC5maXJzdFdoZXJlKChlbGVtZW50KSA9PiBlbGVtZW50LmtleSA9PSBlKQ0KICAgICAgICAgICAgICAudmFsdWU7DQogICAgICAgICAgZmluYWwgdHlwZSA9DQogICAgICAgICAgICAgICcnJyR7dmFsdWUubmFtZX0keyh2YWx1ZS5zdWJ0eXBlICE9IG51bGwpID8gJzwke3ZhbHVlLnN1YnR5cGV9PicgOiAnJ30nJyc7DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICduYW1lJzogZSwNCiAgICAgICAgICAgICd0eXBlJzogdHlwZSwNCiAgICAgICAgICB9Ow0KICAgICAgICB9LA0KICAgICAgKQ0KICAgIF07DQoNCiAgICBjb250ZXh0LnZhcnMgPSB7DQogICAgICAuLi5jb250ZXh0LnZhcnMsDQogICAgICAncHJvcGVydGllcyc6IHByb3BlcnRpZXNGcm9tSnNvbiwNCiAgICAgICdqc29uSW5kZXgnOiBqc29uSW5kZXgsDQogICAgfTsNCg0KICAgIGlmIChwcm9wZXJ0aWVzRnJvbUpzb24uaXNOb3RFbXB0eSAmJiBjbGFzc0ZpZWxkc1RvUGFyc2UuaXNOb3RFbXB0eSkgew0KICAgICAgZmluYWwgbW9kZWxUZXN0R2VuID0gYXdhaXQgTWFzb25HZW5lcmF0b3IuZnJvbUJ1bmRsZShtb2RlbEJ1bmRsZSk7DQoNCiAgICAgIHZhciBmaWx0ZXJlZFZhcnMgPSB7DQogICAgICAgICdtb2RlbF9uYW1lJzogY29udGV4dC52YXJzWydtb2RlbF9uYW1lJ10sDQogICAgICAgICdhZGRpdGlvbmFscyc6IGNvbnRleHQudmFyc1snYWRkaXRpb25hbHMnXSwNCiAgICAgICAgJ3N0eWxlJzogY29udGV4dC52YXJzWydzdHlsZSddLA0KICAgICAgICAnanNvbkluZGV4JzoganNvbkluZGV4LA0KICAgICAgICAncmVsYXRpb25zJzogY2xhc3NUb1BhcnNlICE9IG51bGwNCiAgICAgICAgICAgID8gWw0KICAgICAgICAgICAgICAgIC4uLmNsYXNzVG9QYXJzZS5kZXBlbmRlbmNpZXMNCiAgICAgICAgICAgICAgICAgICAgLm1hcCgoZSkgPT4geyduYW1lJzogUmVDYXNlKGUubmFtZSkuc25ha2VDYXNlfSkNCiAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgOiBudWxsLA0KICAgICAgICAnanNvbic6ICcke2NvbnRleHQudmFyc1snanNvbiddfScsDQogICAgICAgICdqc29uRmlsZSc6ICcnDQogICAgICB9Ow0KDQogICAgICBhd2FpdCBwcmVfZ2VuLnJ1bigNCiAgICAgICAgY29udGV4dC4udmFycyA9IGZpbHRlcmVkVmFycywNCiAgICAgICk7DQoNCiAgICAgIGF3YWl0IG1vZGVsVGVzdEdlbi5nZW5lcmF0ZSgNCiAgICAgICAgRGlyZWN0b3J5R2VuZXJhdG9yVGFyZ2V0KA0KICAgICAgICAgIERpcmVjdG9yeSgoJyR7Zm9sZGVycy5qb2luKCcvJyl9JykpLA0KICAgICAgICApLA0KICAgICAgICB2YXJzOiBjb250ZXh0LnZhcnMsDQogICAgICAgIGxvZ2dlcjogbG9nZ2VyLA0KICAgICAgKTsNCg0KICAgICAgaWYgKGNsYXNzZXMubGVuZ3RoIC0gMSAhPSBqc29uSW5kZXgpIHsNCiAgICAgICAgYXdhaXQgcnVuKGNvbnRleHQpOw0KICAgICAgfSBlbHNlIGlmICh1c2VzRnJlZXplZCAmJg0KICAgICAgICAgIGxvZ2dlci5jb25maXJtKCdXb3VsZCB5b3UgbGlrZSB0byBnZW5lcmF0ZSB0aGUgZnJlZXplZCBtb2RlbD8nLA0KICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUpKSB7DQogICAgICAgIGZpbmFsIGxpYkluZGV4ID0gZm9sZGVycy5pbmRleFdoZXJlKChmb2xkZXIpID0+IGZvbGRlciA9PSAnbGliJyk7DQogICAgICAgIGZpbmFsIHJvb3QgPSBmb2xkZXJzLnN1Ymxpc3QoMCwgbGliSW5kZXgpLmpvaW4oJy8nKS50b1N0cmluZygpOw0KICAgICAgICBmaW5hbCBidWlsZFJ1bm5lclByb2Nlc3MgPSBhd2FpdCBQcm9jZXNzLnN0YXJ0KA0KICAgICAgICAgICdmbHV0dGVyJywNCiAgICAgICAgICBbDQogICAgICAgICAgICAncHViJywNCiAgICAgICAgICAgICdydW4nLA0KICAgICAgICAgICAgJ2J1aWxkX3J1bm5lcicsDQogICAgICAgICAgICAnYnVpbGQnLA0KICAgICAgICAgICAgJy0tZGVsZXRlLWNvbmZsaWN0aW5nLW91dHB1dHMnDQogICAgICAgICAgXSwNCiAgICAgICAgICBydW5JblNoZWxsOiB0cnVlLA0KICAgICAgICAgIHdvcmtpbmdEaXJlY3Rvcnk6IHJvb3QsDQogICAgICAgICk7DQogICAgICAgIGF3YWl0IHN0ZG91dC5hZGRTdHJlYW0oYnVpbGRSdW5uZXJQcm9jZXNzLnN0ZG91dCk7DQogICAgICAgIGF3YWl0IHN0ZGVyci5hZGRTdHJlYW0oYnVpbGRSdW5uZXJQcm9jZXNzLnN0ZGVycik7DQogICAgICB9DQogICAgfQ0KICB9DQp9DQo=","type":"text"},{"path":"pre_gen.dart","data":"Ly8gaWdub3JlX2Zvcl9maWxlOiBsaW5lc19sb25nZXJfdGhhbl84MF9jaGFycywgYXZvaWRfY2F0Y2hpbmdfZXJyb3JzDQoNCmltcG9ydCAnZGFydDppbyc7DQoNCmltcG9ydCAncGFja2FnZTptYXNvbi9tYXNvbi5kYXJ0JzsNCg0KaW1wb3J0ICdqc29uX2hhbmRsZXIvbW9kZWxfZ2VuZXJhdG9yLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvc3ludGF4LmRhcnQnOw0KaW1wb3J0ICdtb2RlbF9zZXJ2aWNlLmRhcnQnOw0KaW1wb3J0ICdwcm9wZXJ0eS5kYXJ0JzsNCmltcG9ydCAncmVjYXNlLmRhcnQnOw0KDQpGdXR1cmU8dm9pZD4gcnVuKEhvb2tDb250ZXh0IGNvbnRleHQpIGFzeW5jIHsNCiAgZmluYWwgbG9nZ2VyID0gY29udGV4dC5sb2dnZXI7DQogIGZpbmFsIGFkZGl0aW9uYWxzID0gY29udGV4dC52YXJzWydhZGRpdGlvbmFscyddIGFzIExpc3Q8ZHluYW1pYz47DQogIGZpbmFsIG1vZGVsU3R5bGUgPSBjb250ZXh0LnZhcnNbJ3N0eWxlJ10gYXMgU3RyaW5nOw0KICB2YXIgaGFzUmVsYXRpb25zID0gY29udGV4dC52YXJzWydyZWxhdGlvbnMnXSAhPSBudWxsICYmDQogICAgICAoY29udGV4dC52YXJzWydyZWxhdGlvbnMnXSBhcyBMaXN0KS5pc05vdEVtcHR5Ow0KICBjb250ZXh0LnZhcnMgPSB7DQogICAgLi4uY29udGV4dC52YXJzLA0KICAgICdoYXNSZWxhdGlvbnMnOiBoYXNSZWxhdGlvbnMsDQogICAgJ3VzZV9jb3B5d2l0aCc6IGFkZGl0aW9uYWxzLmNvbnRhaW5zKCdjb3B5V2l0aCcpLA0KICAgICd1c2VfanNvbic6IGFkZGl0aW9uYWxzLmNvbnRhaW5zKCdqc29uJyksDQogICAgJ3VzZV9lcXVhdGFibGUnOiBhZGRpdGlvbmFscy5jb250YWlucygnZXF1YXRhYmxlJyksDQogICAgJ3VzZV90b3N0cmluZyc6IGFkZGl0aW9uYWxzLmNvbnRhaW5zKCd0b1N0cmluZycpLA0KICAgICd1c2Vfbm9uZSc6IG1vZGVsU3R5bGUgPT0gJ2Jhc2ljJywNCiAgICAndXNlX3NlcmlhbGl6YWJsZSc6IG1vZGVsU3R5bGUgPT0gJ2pzb25fc2VyaWFsaXphYmxlJywNCiAgICAndXNlX2ZyZWV6ZWQnOiBtb2RlbFN0eWxlID09ICdmcmVlemVkJywNCiAgICAnanNvbkluZGV4JzogKChjb250ZXh0LnZhcnNbJ2pzb25JbmRleCddIGFzIGludD8pID8/IDApLA0KICB9Ow0KDQogIGZpbmFsIGpzb25GaWxlID0gRmlsZShjb250ZXh0LnZhcnNbJ2pzb25GaWxlJ10pOw0KICBmaW5hbCBqc29uSW5kZXggPSBjb250ZXh0LnZhcnNbJ2pzb25JbmRleCddIGFzIGludDsNCg0KICAvLy8gQ2hlY2sgZm9yIGpzb24gZmlsZQ0KICBpZiAoanNvbkZpbGUuZXhpc3RzU3luYygpKSB7DQogICAgY29udGV4dC52YXJzID0gew0KICAgICAgLi4uY29udGV4dC52YXJzLA0KICAgICAgJ2pzb24nOiBqc29uRmlsZS5yZWFkQXNTdHJpbmdTeW5jKCksDQogICAgfTsNCiAgfQ0KDQogIC8vLyBJZiB0aGVyZSBpcyBzZWVkZWQtanNvbiwgdGhlbiBoYW5kbGUganNvbg0KICBpZiAoY29udGV4dC52YXJzWydqc29uJ10gaXMgU3RyaW5nICYmDQogICAgICAoY29udGV4dC52YXJzWydqc29uJ10gYXMgU3RyaW5nKS5pc05vdEVtcHR5KSB7DQogICAgZmluYWwgY2xhc3NlcyA9IE1vZGVsR2VuZXJhdG9yKGNvbnRleHQudmFyc1snbW9kZWxfbmFtZSddKQ0KICAgICAgICAuZ2VuZXJhdGVDbGFzc0RlZmluaXRpb25zKGNvbnRleHQudmFyc1snanNvbiddIGFzIFN0cmluZyk7DQogICAgZmluYWwgY2xhc3NUb1BhcnNlID0NCiAgICAgICAgY2xhc3Nlcy5sZW5ndGggLSAxID49IGpzb25JbmRleCA/IGNsYXNzZXNbanNvbkluZGV4XSA6IG51bGw7DQogICAgZmluYWwgY2xhc3NGaWVsZHNUb1BhcnNlID0gY2xhc3NUb1BhcnNlICE9IG51bGwNCiAgICAgICAgPyBjbGFzc2VzW2pzb25JbmRleF0uZmllbGRzDQogICAgICAgIDogPFN0cmluZywgVHlwZURlZmluaXRpb24+e307DQoNCiAgICBmaW5hbCBwcm9wZXJ0aWVzRnJvbUpzb24gPSA8TWFwPFN0cmluZywgZHluYW1pYz4+Ww0KICAgICAgLi4uY2xhc3NGaWVsZHNUb1BhcnNlLmtleXMubWFwKA0KICAgICAgICAoZSkgew0KICAgICAgICAgIGZpbmFsIHZhbHVlID0gY2xhc3NGaWVsZHNUb1BhcnNlLmVudHJpZXMNCiAgICAgICAgICAgICAgLmZpcnN0V2hlcmUoKGVsZW1lbnQpID0+IGVsZW1lbnQua2V5ID09IGUpDQogICAgICAgICAgICAgIC52YWx1ZTsNCiAgICAgICAgICBmaW5hbCB0eXBlID0NCiAgICAgICAgICAgICAgJycnJHt2YWx1ZS5uYW1lfSR7KHZhbHVlLnN1YnR5cGUgIT0gbnVsbCkgPyAnPCR7dmFsdWUuc3VidHlwZX0+JyA6ICcnfScnJzsNCiAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgJ25hbWUnOiBlLA0KICAgICAgICAgICAgJ3R5cGUnOiB0eXBlLA0KICAgICAgICAgIH07DQogICAgICAgIH0sDQogICAgICApDQogICAgXTsNCg0KICAgIGNvbnRleHQudmFycyA9IHsNCiAgICAgIC4uLmNvbnRleHQudmFycywNCiAgICAgICdyZWxhdGlvbnMnOiAoY2xhc3NUb1BhcnNlPy5kZXBlbmRlbmNpZXMgPz8gW10pDQogICAgICAgICAgLm1hcCgoZSkgPT4geyduYW1lJzogUmVDYXNlKGUubmFtZSkuc25ha2VDYXNlfSkNCiAgICAgICAgICAudG9MaXN0KCksDQogICAgICAnbW9kZWxfbmFtZSc6IChjbGFzc1RvUGFyc2U/Lm5hbWUgPz8gY29udGV4dC52YXJzWydtb2RlbF9uYW1lJ10pLA0KICAgICAgJ3Byb3BlcnRpZXMnOiBwcm9wZXJ0aWVzRnJvbUpzb24sDQogICAgICAnaGFzUmVsYXRpb25zJzogKGNsYXNzVG9QYXJzZT8uZGVwZW5kZW5jaWVzLmlzTm90RW1wdHkgPT0gdHJ1ZSksDQogICAgfTsNCg0KICAgIGhhc1JlbGF0aW9ucyA9IChjbGFzc1RvUGFyc2U/LmRlcGVuZGVuY2llcy5pc05vdEVtcHR5ID09IHRydWUpOw0KICB9DQoNCiAgZmluYWwgaGFzU2VlZGVkUHJvcGVydGllcyA9IGNvbnRleHQudmFyc1sncHJvcGVydGllcyddICE9IG51bGwgJiYNCiAgICAgIChjb250ZXh0LnZhcnNbJ3Byb3BlcnRpZXMnXSBhcyBMaXN0KS5pc05vdEVtcHR5Ow0KDQogIC8vIEZvciBmcmVlemVkIGNoZWNrOg0KICAvLyBBcyB0aGUgcG9zdF9nZW4gaGFzIHRoZSBvcHRpb24gdG8gcnVuIGJ1aWxkX3J1bm5lciwgd2UgbWFrZSB0aGlzIGNoZWNrDQogIC8vIGJlZm9yZWhhbmQgdG8gbWFrZSBzdXJlIHdlIGFyZSBpbiB0aGUgbGliIGRpcmVjdG9yeS4NCiAgLy8NCiAgLy8gRm9yIHJlbGF0aW9ucyBjaGVjazoNCiAgLy8gQXMgcmVsYXRpb25zIHJlcXVpcmVzIHRoZSBsaWIgZGlyZWN0b3J5LCB3ZSBtYWtlIHRoaXMgY2hlY2sNCiAgLy8gYmVmb3JlaGFuZCB0byBtYWtlIHN1cmUgd2UgYXJlIGluIHRoZSBsaWIgZGlyZWN0b3J5Lg0KICBpZiAobW9kZWxTdHlsZSA9PSAnZnJlZXplZCcgfHwgaGFzUmVsYXRpb25zKSB7DQogICAgZmluYWwgcHJvZ3Jlc3MgPSBsb2dnZXIucHJvZ3Jlc3MoJ1ZhbGlkYXRpbmcgb3V0cHV0IGRpcmVjdG9yeScpOw0KICAgIGF3YWl0IE1vZGVsU2VydmljZS52YWxpZGF0ZURpcmVjdG9yeShjb250ZXh0KTsNCiAgICBwcm9ncmVzcy5jb21wbGV0ZSgnVmFsaWQgb3V0cHV0IGRpcmVjdG9yeSEnKTsNCiAgfQ0KDQogIGZpbmFsIHByb3BlcnRpZXMgPSA8TWFwPFN0cmluZywgZHluYW1pYz4+W107DQoNCiAgaWYgKGhhc1NlZWRlZFByb3BlcnRpZXMpIHsNCiAgICBmaW5hbCBzZWVkZWRQcm9wZXJ0aWVzID0gY29udGV4dC52YXJzWydwcm9wZXJ0aWVzJ10gYXMgTGlzdDsNCiAgICBNb2RlbFNlcnZpY2UudmVyaWZ5U2VlZGVkUHJvcGVydGllcyhzZWVkZWRQcm9wZXJ0aWVzLCBsb2dnZXIpOw0KICAgIGZvciAoZmluYWwgcHJvcGVydHkgaW4gc2VlZGVkUHJvcGVydGllcykgew0KICAgICAgTW9kZWxTZXJ2aWNlLmFkZFByb3BlcnR5KA0KICAgICAgICBwcm9wZXJ0aWVzLA0KICAgICAgICBQcm9wZXJ0eS5mcm9tTWFwKHByb3BlcnR5IGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KSwNCiAgICAgICk7DQogICAgfQ0KICB9IGVsc2UgaWYgKGxvZ2dlci5jb25maXJtKA0KICAgICc/IERvIHlvdSB3YW50IHRvIGFkZCBwcm9wZXJ0aWVzIHRvIHlvdXIgbW9kZWw/JywNCiAgICBkZWZhdWx0VmFsdWU6IHRydWUsDQogICkpIHsNCiAgICBNb2RlbFNlcnZpY2UuYWRkUHJvcGVydGllcyhsb2dnZXIsIHByb3BlcnRpZXMpOw0KICB9DQoNCiAgY29udGV4dC52YXJzID0gew0KICAgIC4uLmNvbnRleHQudmFycywNCiAgICAncHJvcGVydGllcyc6IHByb3BlcnRpZXMsDQogICAgJ2hhc1Byb3BlcnRpZXMnOiBwcm9wZXJ0aWVzLmlzTm90RW1wdHksDQogIH07DQp9DQoNCkZ1dHVyZTx2b2lkPiBwcmVHZW5Ib29rV3JhcHBlcihIb29rQ29udGV4dCBjb250ZXh0LA0KICAgIHtGdW5jdGlvbihNYXA8U3RyaW5nLCBkeW5hbWljPiB2YWx1ZSk/IHByZUdlbkhvb2tDaGFuZ2VkfSkgYXN5bmMgew0KICBhd2FpdCBydW4oY29udGV4dCk7DQogIHByZUdlbkhvb2tDaGFuZ2VkPy5jYWxsKGNvbnRleHQudmFycyk7DQp9DQo=","type":"text"},{"path":"property.dart","data":"aW1wb3J0ICdkYXJ0OmNvbnZlcnQnOw0KDQovLy8ge0B0ZW1wbGF0ZSBwcm9wZXJ0eX0NCi8vLyBBIHByb3BlcnR5IGZvciBtb2RlbCBjbGFzcw0KLy8vIHtAZW5kdGVtcGxhdGV9DQpjbGFzcyBQcm9wZXJ0eSB7DQogIC8vLyB7QG1hY3JvIHByb3BlcnR5fQ0KICBjb25zdCBQcm9wZXJ0eSh7DQogICAgcmVxdWlyZWQgdGhpcy5uYW1lLA0KICAgIHJlcXVpcmVkIHRoaXMudHlwZSwNCiAgICB0aGlzLmlzTnVsbGFibGUgPSBmYWxzZSwNCiAgfSk7DQoNCiAgLy8vIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eQ0KICBmaW5hbCBTdHJpbmcgbmFtZTsNCg0KICAvLy8gVGhlIHR5cGUgb2YgdGhlIHByb3BlcnR5DQogIGZpbmFsIFN0cmluZyB0eXBlOw0KDQogIC8vLyBBIGZsYWcgaWYgdGhlIHByb3BlcnR5IGlzIG51bGxhYmxlDQogIGZpbmFsIGJvb2wgaXNOdWxsYWJsZTsNCg0KICBmYWN0b3J5IFByb3BlcnR5LmZyb21NYXAoTWFwPFN0cmluZywgZHluYW1pYz4gbWFwKSB7DQogICAgcmV0dXJuIFByb3BlcnR5KA0KICAgICAgbmFtZTogbWFwWyduYW1lJ10gYXMgU3RyaW5nLA0KICAgICAgdHlwZTogbWFwWyd0eXBlJ10gYXMgU3RyaW5nLA0KICAgICAgaXNOdWxsYWJsZTogKG1hcFsndHlwZSddIGFzIFN0cmluZykuZW5kc1dpdGgoJz8nKSwNCiAgICApOw0KICB9DQoNCiAgZmFjdG9yeSBQcm9wZXJ0eS5mcm9tSnNvbihTdHJpbmcgc291cmNlKSA9Pg0KICAgICAgUHJvcGVydHkuZnJvbU1hcChqc29uLmRlY29kZShzb3VyY2UpIGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KTsNCn0NCg==","type":"text"},{"path":"pubspec.yaml","data":"bmFtZTogbW9kZWxfaG9va3MNCg0KZW52aXJvbm1lbnQ6DQogIHNkazogIj49Mi4xMi4wIDwzLjAuMCINCg0KZGVwZW5kZW5jaWVzOg0KICBtYXNvbjogXjAuMS4wLWRldg0KICB5YW1sOiBeMy4xLjENCiAgZGFydF9zdHlsZTogXjIuMi41DQoNCmRldl9kZXBlbmRlbmNpZXM6DQogIHZlcnlfZ29vZF9hbmFseXNpczogXjMuMC4xDQo=","type":"text"},{"path":"recase.dart","data":"Y2xhc3MgUmVDYXNlIHsNCiAgZmluYWwgUmVnRXhwIF91cHBlckFscGhhUmVnZXggPSBSZWdFeHAocidbQS1aXScpOw0KDQogIGZpbmFsIHN5bWJvbFNldCA9IHsnICcsICcuJywgJy8nLCAnXycsICdcXCcsICctJ307DQoNCiAgbGF0ZSBTdHJpbmcgb3JpZ2luYWxUZXh0Ow0KICBsYXRlIExpc3Q8U3RyaW5nPiBfd29yZHM7DQoNCiAgUmVDYXNlKFN0cmluZyB0ZXh0KSB7DQogICAgdGhpcy5vcmlnaW5hbFRleHQgPSB0ZXh0Ow0KICAgIHRoaXMuX3dvcmRzID0gX2dyb3VwSW50b1dvcmRzKHRleHQpOw0KICB9DQoNCiAgTGlzdDxTdHJpbmc+IF9ncm91cEludG9Xb3JkcyhTdHJpbmcgdGV4dCkgew0KICAgIFN0cmluZ0J1ZmZlciBzYiA9IFN0cmluZ0J1ZmZlcigpOw0KICAgIExpc3Q8U3RyaW5nPiB3b3JkcyA9IFtdOw0KICAgIGJvb2wgaXNBbGxDYXBzID0gdGV4dC50b1VwcGVyQ2FzZSgpID09IHRleHQ7DQoNCiAgICBmb3IgKGludCBpID0gMDsgaSA8IHRleHQubGVuZ3RoOyBpKyspIHsNCiAgICAgIFN0cmluZyBjaGFyID0gdGV4dFtpXTsNCiAgICAgIFN0cmluZz8gbmV4dENoYXIgPSBpICsgMSA9PSB0ZXh0Lmxlbmd0aCA/IG51bGwgOiB0ZXh0W2kgKyAxXTsNCg0KICAgICAgaWYgKHN5bWJvbFNldC5jb250YWlucyhjaGFyKSkgew0KICAgICAgICBjb250aW51ZTsNCiAgICAgIH0NCg0KICAgICAgc2Iud3JpdGUoY2hhcik7DQoNCiAgICAgIGJvb2wgaXNFbmRPZldvcmQgPSBuZXh0Q2hhciA9PSBudWxsIHx8DQogICAgICAgICAgKF91cHBlckFscGhhUmVnZXguaGFzTWF0Y2gobmV4dENoYXIpICYmICFpc0FsbENhcHMpIHx8DQogICAgICAgICAgc3ltYm9sU2V0LmNvbnRhaW5zKG5leHRDaGFyKTsNCg0KICAgICAgaWYgKGlzRW5kT2ZXb3JkKSB7DQogICAgICAgIHdvcmRzLmFkZChzYi50b1N0cmluZygpKTsNCiAgICAgICAgc2IuY2xlYXIoKTsNCiAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gd29yZHM7DQogIH0NCg0KICBTdHJpbmcgZ2V0IHNuYWtlQ2FzZSA9PiBfZ2V0U25ha2VDYXNlKCk7DQoNCiAgU3RyaW5nIF9nZXRTbmFrZUNhc2UoKSB7DQogICAgTGlzdDxTdHJpbmc+IHdvcmRzID0gdGhpcy5fd29yZHMubWFwKCh3b3JkKSA9PiB3b3JkLnRvTG93ZXJDYXNlKCkpLnRvTGlzdCgpOw0KDQogICAgcmV0dXJuIHdvcmRzLmpvaW4oJ18nKTsNCiAgfQ0KfQ0K","type":"text"},{"path":"string_extensions.dart","data":"ZXh0ZW5zaW9uIFN0cmluZ1ggb24gU3RyaW5nIHsNCiAgLy8gUHJvcGVydHkgdHlwZSB3aXRoIG51bGwgb3BlcmF0b3Igc3RyaXBwZWQNCiAgU3RyaW5nIGdldCBjbGVhbmVkIHsNCiAgICBpZiAoZW5kc1dpdGgoJz8nKSkgew0KICAgICAgcmV0dXJuIHN1YnN0cmluZygwLCBsZW5ndGggLSAxKTsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpczsNCiAgfQ0KfQ0K","type":"text"}],"name":"model","description":"A brick to create your model with properties and all the supporting methods, copyWith, to/from json, equatable and more!","version":"0.7.1","environment":{"mason":"any"},"repository":"https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/model","readme":{"path":"README.md","data":"IyBNb2RlbA0KDQpBIGJyaWNrIHRvIGNyZWF0ZSB5b3VyIG1vZGVsIHdpdGggcHJvcGVydGllcyBhbmQgYWxsIHRoZSBzdXBwb3J0aW5nIG1ldGhvZHMsIGNvcHlXaXRoLCB0by9mcm9tIGpzb24sIGVxdWF0YWJsZSBhbmQgbW9yZSENCg0KVGhpcyBicmljayBub3cgc3VwcG9ydHMgY29uZmlncyEgU2VlIGJlbG93IGZvciBtb3JlIGluZm8uDQoNCiMjIFRhYmxlIG9mIENvbnRlbnRzDQoNCi0gW0hvdyB0byB1c2VdKCNob3ctdG8tdXNlLfCfmoApDQogIC0gW01vZGVsIGZyb20gQ29tbWFuZCBMaW5lXSgjY29tbWFuZC1saW5lKQ0KICAtIFtNb2RlbHMgZnJvbSBKc29uIEZpbGVdKCN1c2luZy1hLWpzb24tZmlsZSkNCiAgLSBbTW9kZWwgZnJvbSBDb25maWddKCNjb25maWcpDQotIFtPdXRwdXRzXSgjb3V0cHV0cykNCg0KIyMgSG93IHRvIHVzZSDwn5qADQoNCiMjIyBDb21tYW5kIExpbmUNCg0KYG1hc29uIG1ha2UgbW9kZWwgLS1tb2RlbF9uYW1lIHVzZXIgLS1hZGRpdGlvbmFscyAiW2NvcHlXaXRoLCBqc29uLCBlcXVhdGFibGVdIiAtLXN0eWxlIGJhc2ljYA0KDQpUaGVuIGFkZCB5b3VyIHByb3BlcnRpZXMhIChPcHRpb25hbCkNCg0KIyMgVmFyaWFibGVzIGZvciB0aGUgQ29tbWFuZCBMaW5lIOKcqA0KDQp8IFZhcmlhYmxlICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRGVmYXVsdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBUeXBlICAgICB8DQp8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLSB8DQp8IGBtb2RlbF9uYW1lYCAgfCBUaGUgbmFtZSBvZiB0aGUgbW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgc3RyaW5nYCB8DQp8IGBhZGRpdGlvbmFsc2AgfCBUaGUgYWRkaXRpb25hbHMgbWV0aG9kcy9leHRlbnNpb25zIHlvdSBjYW4gaGF2ZSBvbiBhIG1vZGVsIHwgW2NvcHlXaXRoLCBqc29uLCBlcXVhdGFibGUsIHRvU3RyaW5nXSAgICAgfCBgYXJyYXlgICB8DQp8IGBzdHlsZWAgICAgICAgfCBUaGUgc3R5bGUgb2YgbW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYmFzaWMgKGJhc2ljLCBqc29uX3NlcmlhbGl6YWJsZSwgZnJlZXplZCkgfCBgZW51bWAgICB8DQp8IGBqc29uRmlsZWAgICAgfCBUaGUgbG9jYXRpb24gb2YgeW91ciBqc29uIGZpbGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgc3RyaW5nYCB8DQoNCiMjIyBVc2luZyBhIEpzb24gZmlsZQ0KDQpXQVJOSU5HOiBZb3UgY2Fubm90IHVzZSB0aGUgLW8gYXJndW1lbnQgd2hlbiB1c2luZyBhIGpzb25GaWxlLg0KDQpgbWFzb24gbWFrZSBtb2RlbCAtLWpzb25GaWxlIC5ccGF0aFRvWW91ckpzb25GaWxlYA0KDQpbRXhhbXBsZSBKc29uXShodHRwczovL2dpdGh1Yi5jb20vTHVrZU1vb2R5MDEvbWFzb25fYnJpY2tzL3RyZWUvbWFzdGVyL2JyaWNrcy9tb2RlbC9qc29uX2ZpbGVfdGVtcGxhdGUuanNvbik6DQoNClRPRE86IEN1cnJlbnRseSB0aGVyZSBpcyBub3QgbXVjaCBlcnJvciBoYW5kbGluZyB3aGVuIGl0IGNvbWVzIHRvIHRoZSBKU09OIGZpbGVzLiBQbGVhc2UgcmFpc2UgYSBidWcgaWYgeW91IGNvbWUgYWNyb3NzIGEgSlNPTiBmaWxlIHRoYXQgZG9lcyBub3Qgd29yaywgYnV0IHNob3VsZC4NCg0KIyMjIENvbmZpZw0KDQpgbWFzb24gbWFrZSBtb2RlbCAtYyBtb2RlbF9jb25maWcuanNvbmANCg0KW0V4YW1wbGUgQ29uZmlnXShodHRwczovL2dpdGh1Yi5jb20vTHVrZU1vb2R5MDEvbWFzb25fYnJpY2tzL3RyZWUvbWFzdGVyL2JyaWNrcy9tb2RlbC9tb2RlbF9jb25maWdfdGVtcGxhdGUuanNvbik6DQoNCmBgYGpzb24NCnsNCiAgIm1vZGVsX25hbWUiOiAic3VwZXIgdXNlciIsDQogICJhZGRpdGlvbmFscyI6IFsiY29weVdpdGgiLCAianNvbiIsICJlcXVhdGFibGUiLCAidG9TdHJpbmciXSwNCiAgInN0eWxlIjogImpzb25fc2VyaWFsaXphYmxlIiwgLy8gQ291bGQgYmUgYmFzaWMsIGpzb25fc2VyaWFsaXphYmxlLCBvciBmcmVlemVkDQogICJyZWxhdGlvbnMiOiBbeyAibmFtZSI6ICJ1c2VyIiB9XSwgLy8gVXNlIHRoaXMgd2hlbiB5b3VyIG1vZGVsIGRlcGVuZHMgb24gb3RoZXIgbW9kZWxzDQogICJwcm9wZXJ0aWVzIjogWw0KICAgIHsgIm5hbWUiOiAiZmlyc3ROYW1lIiwgInR5cGUiOiAiU3RyaW5nIiB9LA0KICAgIHsgIm5hbWUiOiAibGFzdE5hbWUiLCAidHlwZSI6ICJTdHJpbmc/IiB9LA0KICAgIHsgIm5hbWUiOiAiYWdlIiwgInR5cGUiOiAiaW50IiB9LA0KICAgIHsgIm5hbWUiOiAiaXNIYXBweSIsICJ0eXBlIjogImJvb2wiIH0sDQogICAgeyAibmFtZSI6ICJmYXZvdXJpdGVOdW1iZXIiLCAidHlwZSI6ICJpbnQiIH0sDQogICAgeyAibmFtZSI6ICJuaWNrbmFtZXMiLCAidHlwZSI6ICJMaXN0PFN0cmluZz4iIH0sDQogICAgeyAibmFtZSI6ICJjb3VudHJpZXNWaXNpdGVkIiwgInR5cGUiOiAiTGlzdDxTdHJpbmc/PiIgfSwNCiAgICB7ICJuYW1lIjogImZyaWVuZHMiLCAidHlwZSI6ICJMaXN0PFVzZXI+IiB9IC8vIFdlIHdpbGwgbmVlZCBgcmVsYXRpb25zYCBiZWNhdXNlIG9mIHRoaXMgbW9kZWwgYExpc3Q8VXNlcj5gDQogIF0NCn0NCmBgYA0KDQojIyBWYXJpYWJsZXMgZm9yIGEgQ29uZmlnIOKcqA0KDQp8IFZhcmlhYmxlICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBUeXBlICAgICB8DQp8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLSB8DQp8IGBtb2RlbF9uYW1lYCAgfCBUaGUgbmFtZSBvZiB0aGUgbW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgc3RyaW5nYCB8DQp8IGBhZGRpdGlvbmFsc2AgfCBUaGUgYWRkaXRpb25hbHMgbWV0aG9kcy9leHRlbnNpb25zIHlvdSBjYW4gaGF2ZSBvbiBhIG1vZGVsICAgICAgICAgICAgICAgICAgICAgfCBgYXJyYXlgICB8DQp8IGBzdHlsZWAgICAgICAgfCBUaGUgc3R5bGUgb2YgbW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgZW51bWAgICB8DQp8IGByZWxhdGlvbnNgICAgfCBUaGUgbW9kZWxzIHRoYXQgdGhlIGN1cnJlbnQgbW9kZWwgd2lsbCBkZXBlbmQgb24gYW5kIHdpbGwgbmVlZCB0aGUgaW1wb3J0cyBmb3IgfCBgYXJyYXlgICB8DQp8IGBwcm9wZXJ0aWVzYCAgfCBUaGUgcHJvcGVydGllcyBmb3IgdGhlIG1vZGVsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgYXJyYXlgICB8DQoNCiMjIE91dHB1dHMg8J+Tpg0KDQpgYGANCi0tbW9kZWxfbmFtZSB1c2VyIC0tYWRkaXRpb25hbHMgIltjb3B5V2l0aCwganNvbiwgZXF1YXRhYmxlLCB0b1N0cmluZ10iIC0tc3R5bGUganNvbl9zZXJpYWxpemFibGUNCuKUnOKUgOKUgCB1c2VyLmRhcnQNCuKUnOKUgOKUgCB1c2VyLmcuZGFydA0K4pSU4pSA4pSAIC4uLg0KYGBgDQoNCmBgYGRhcnQNCmltcG9ydCAncGFja2FnZTplcXVhdGFibGUvZXF1YXRhYmxlLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmpzb25fYW5ub3RhdGlvbi9qc29uX2Fubm90YXRpb24uZGFydCc7DQoNCnBhcnQgJ3VzZXIuZy5kYXJ0JzsNCg0KLy8vIHtAdGVtcGxhdGUgdXNlcn0NCi8vLyBVc2VyIGRlc2NyaXB0aW9uDQovLy8ge0BlbmR0ZW1wbGF0ZX0NCkBKc29uU2VyaWFsaXphYmxlKCkNCmNsYXNzIFVzZXIgZXh0ZW5kcyBFcXVhdGFibGUgew0KICAvLy8ge0BtYWNybyB1c2VyfQ0KICBjb25zdCBVc2VyKHsNCiAgICByZXF1aXJlZCB0aGlzLm5hbWUsDQogICAgcmVxdWlyZWQgdGhpcy5mYW1pbHlNZW1iZXJzLA0KICAgIHJlcXVpcmVkIHRoaXMuZmFtaWx5LA0KICB9KTsNCg0KICAvLy8gQ3JlYXRlcyBhIFVzZXIgZnJvbSBKc29uIG1hcA0KICBmYWN0b3J5IFVzZXIuZnJvbUpzb24oTWFwPFN0cmluZywgZHluYW1pYz4gZGF0YSkgPT4gXyRVc2VyRnJvbUpzb24oZGF0YSk7DQoNCiAgLy8vIEEgZGVzY3JpcHRpb24gZm9yIG5hbWUNCiAgZmluYWwgU3RyaW5nIG5hbWU7DQoNCiAgLy8vIEEgZGVzY3JpcHRpb24gZm9yIGZhbWlseU1lbWJlcnMNCiAgZmluYWwgTGlzdDxVc2VyPiBmYW1pbHlNZW1iZXJzOw0KDQogIC8vLyBBIGRlc2NyaXB0aW9uIGZvciBmYW1pbHkNCiAgZmluYWwgRmFtaWx5IGZhbWlseTsNCg0KICAvLy8gQ3JlYXRlcyBhIGNvcHkgb2YgdGhlIGN1cnJlbnQgVXNlciB3aXRoIHByb3BlcnR5IGNoYW5nZXMNCiAgVXNlciBjb3B5V2l0aCh7DQogICAgU3RyaW5nPyBuYW1lLA0KICAgIExpc3Q8VXNlcj4/IGZhbWlseU1lbWJlcnMsDQogICAgRmFtaWx5PyBmYW1pbHksDQogIH0pIHsNCiAgICByZXR1cm4gVXNlcigNCiAgICAgIG5hbWU6IG5hbWUgPz8gdGhpcy5uYW1lLA0KICAgICAgZmFtaWx5TWVtYmVyczogZmFtaWx5TWVtYmVycyA/PyB0aGlzLmZhbWlseU1lbWJlcnMsDQogICAgICBmYW1pbHk6IGZhbWlseSA/PyB0aGlzLmZhbWlseSwNCiAgICApOw0KICB9DQoNCiAgQG92ZXJyaWRlDQogIExpc3Q8T2JqZWN0Pz4gZ2V0IHByb3BzID0+IFsNCiAgICAgICAgbmFtZSwNCiAgICAgICAgZmFtaWx5TWVtYmVycywNCiAgICAgICAgZmFtaWx5LA0KICAgICAgXTsNCg0KICAvLy8gQ3JlYXRlcyBhIEpzb24gbWFwIGZyb20gYSBVc2VyDQogIE1hcDxTdHJpbmcsIGR5bmFtaWM+IHRvSnNvbigpID0+IF8kVXNlclRvSnNvbih0aGlzKTsNCg0KICAvLy8gQ3JlYXRlcyBhIHRvU3RyaW5nKCkgb3ZlcnJpZGUgZm9yIFVzZXINCiAgQG92ZXJyaWRlDQogIFN0cmluZyB0b1N0cmluZygpID0+ICdVc2VyKG5hbWU6ICRuYW1lLCBmYW1pbHlNZW1iZXJzOiAkZmFtaWx5TWVtYmVycywgZmFtaWx5OiAkZmFtaWx5KSc7DQp9DQoNCi8vdXNlci5nLmRhcnQNCnBhcnQgb2YgJ3VzZXIuZGFydCc7DQoNClVzZXIgXyRVc2VyRnJvbUpzb24oTWFwPFN0cmluZywgZHluYW1pYz4ganNvbikgPT4gVXNlcigNCiAgICAgIG5hbWU6IGpzb25bJ25hbWUnXSBhcyBTdHJpbmcsDQogICAgICBmYW1pbHlNZW1iZXJzOiAoanNvblsnZmFtaWx5TWVtYmVycyddIGFzIExpc3Q8ZHluYW1pYz4pDQogICAgICAgICAgLm1hcCgoZSkgPT4gVXNlci5mcm9tSnNvbihlIGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KSkNCiAgICAgICAgICAudG9MaXN0KCksDQogICAgICBmYW1pbHk6IEZhbWlseS5mcm9tSnNvbihqc29uWydmYW1pbHknXSBhcyBNYXA8U3RyaW5nLCBkeW5hbWljPiksDQogICAgKTsNCg0KTWFwPFN0cmluZywgZHluYW1pYz4gXyRVc2VyVG9Kc29uKFVzZXIgaW5zdGFuY2UpID0+IDxTdHJpbmcsIGR5bmFtaWM+ew0KICAgICAgJ25hbWUnOiBpbnN0YW5jZS5uYW1lLA0KICAgICAgJ2ZhbWlseU1lbWJlcnMnOiBpbnN0YW5jZS5mYW1pbHlNZW1iZXJzLA0KICAgICAgJ2ZhbWlseSc6IGluc3RhbmNlLmZhbWlseSwNCiAgICB9Ow0KDQpgYGANCg==","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjcuMQ0KDQotIGZpeDogSW1wcm92ZW1lbnRzIHRvIHdvcmtpbmcgd2l0aCBmcmVlemVkIGNsYXNzZXMgd2hlbiB1c2luZyBhIEpTT04gZmlsZQ0KDQojIDAuNy4wKzENCg0KLSBjaG9yZTogRG9jdW1lbnRhdGlvbiB1cGRhdGVzDQoNCiMgMC43LjANCg0KLSBmZWF0OiBKc29uIEZpbGUgcGFyc2luZyBhbmQgaGFuZGxpbmcNCg0KLSBjaG9yZTogTWFqb3IgY2xlYW51cCBvZiBtb2RlbCBmaWxlcw0KDQojIDAuNi4xDQoNCi0gZmVhdDogQWRkZWQgdG9TdHJpbmcoKSBvdmVycmlkZSAoQGFzaGlzaGJlY2spDQoNCiMgMC42LjANCg0KLSBmZWF0OiBBZGQgTnVsbGFibGUgdHlwZXMgKEB3aXpsaWYpDQoNCiMgMC41LjENCg0KLSBmaXg6IFVwZGF0ZSBiYXNpY190b19qc29uIHRvIHVzZSBjdXJyZW50IGluc3RhbmNlIGluc3RlYWQgb2YgcGFzc2luZyBvbmUgdGhyb3VnaA0KDQojIDAuNS4wDQoNCi0gZmVhdDogQWxsb3cgZm9yIHNlZWRpbmcvY29uZmlncyBmb3IgYSB3aG9sZSBtb2RlbCBpbmNsdWRpbmcgdGhlIHByb3BlcnRpZXMNCg0KLSBmZWF0OiBSZWxhdGUgbW9kZWxzIHRvIGdlbmVyYXRlIHRoZWlyIGltcG9ydHMgKEN1cnJlbnRseSBjb25maWcgb25seSkNCg0KLSBjaG9yZTogVXBkYXRlIGRvY3VtZW50YXRpb24gd2l0aCBpbmZvcm1hdGlvbiBhYm91dCBjb25maWdzIGFuZCBob3cgaXQgZGlmZmVycyBmcm9tIHJlZ3VsYXIgY29tbWFuZCBsaW5lIGdlbmVyYXRpb24NCg0KIyAwLjQuMQ0KDQotIGZpeDogVXBkYXRlIGJyaWNrLnlhbWwgd2l0aCBgZGVmYXVsdHNgIGluc3RlYWQgb2YgYGRlZmF1bHRgDQoNCi0gY2hvcmU6IFNtYWxsIGRvY3VtZW50YXRpb24gY2hhbmdlcw0KDQojIDAuNC4wDQoNCi0gZmVhdDogQWxsb3cgbW9kZWxzIHRvIGhhdmUgZGlmZmVyZW50IHN0eWxlcyAoYmFzaWMsIGpzb25fc2VyaWFsaXphYmxlLCBmcmVlemVkKQ0KDQotIGZlYXQ6IEltcHJvdmUgQVBJIGZvciBzZWxlY3RpbmcgYWRkaXRpb25hbCBtZXRob2RzL2V4dGVuc2lvbnMNCg0KLSBjbGVhbnVwOiBNYWtlIHVzZSBvZiBwYXJ0aWFscyBmb3IgYmV0dGVyIG1haW50YWluYWJpbGl0eQ0KDQotIFRoYW5rcyB0byBATG9zRGFuaWVsb3NzIGZvciBoaXMgUFIgYWRkcmVzc2luZyBmcmVlemVkIHN1cHBvcnQgYW5kIGxheWluZyBvdXQgdGhlIGluaXRpYWwgd29yayBmb3IgaXQhDQoNCiMgMC4zLjcNCg0KLSBmZWF0OiBDaGFuZ2UgbW9kZWwgZm9ybWF0IHRvIHNwbGl0IG9uICcgJyBpbnN0ZWFkIG9mICcvJyBtYWtpbmcgaXQgZWFzaWVyIGZvciBkZXZlbG9wZXJzIHRvIHR5cGUgcHJvcGVydGllcw0KDQojIDAuMy42DQoNCi0gY2hvcmU6IEFkZCBkb2N1bWVudGF0aW9uIHRvIHJlZmxlY3QgbmV3IG1vZGVsIGdlbmVyYXRpb24NCg0KIyAwLjMuNQ0KDQotIGZlYXQ6IEFkZCBkb2N1bWVudGF0aW9uIGZvciBnZW5lcmF0ZWQgbW9kZWwNCg0KIyAwLjMuNA0KDQotIGZpeDogQWxsb3cgbm8gcHJvcGVydGllcyB0byBiZSBhZGRlZCB3aXRob3V0IGVycm9ycw0KDQojIDAuMy4zDQoNCi0gY2hvcmU6IFNtYWxsIGRvY3VtZW50YXRpb24gY2hhbmdlcw0KDQojIDAuMy4yDQoNCi0gY2hvcmU6IFVwZGF0ZSBhbGVydCBtZXNzYWdlIHRvIHJlZmxlY3QgbmV3IHR5cGUvbmFtZSBjaGFuZ2VzIChMYXN0IHZlcnNpb24gZGlkIG5vdCB1cGRhdGUpDQoNCiMgMC4zLjENCg0KLSBjaG9yZTogVXBkYXRlIGFsZXJ0IG1lc3NhZ2UgdG8gcmVmbGVjdCBuZXcgdHlwZS9uYW1lIGNoYW5nZXMNCi0gY2hvcmU6IFNtYWxsIHVwZGF0ZXMgdG8gcHJvcGVydHkgY2hlY2tpbmcNCg0KIyAwLjMuMA0KDQotIGZlYXQ6IFN1cHBvcnQgQ3VzdG9tIExpc3QgVHlwZXMgZm9yIHRvL2Zyb21Kc29uDQoNCiMgMC4yLjENCg0KLSBmaXg6IFJlbW92ZSBleHRyYSAuZGFydCBzdWZmaXggb24gZ2VuZXJhdGVkIGZpbGUNCg0KIyAwLjIuMA0KDQotIGZpeDogdG9Kc29uIHR5cG8gZml4ZWQNCi0gZmVhdDogU3VwcG9ydCBjdXN0b20gdHlwZXMgaW4gdG8vZnJvbSBKc29uDQotIGZlYXQ6IFVwZGF0ZSBhbGwgcHJvcGVydGllcyB0byBiZSByZXF1aXJlZCBuYW1lcyBwYXJhbWV0ZXJzIGFzIHN0YW5kYXJkDQoNCiMgMC4xLjINCg0KLSBmZWF0OiBTdXBwb3J0IHR5cGVzIHdpdGggc29tZSB0eXBlIHBhcmFtZXRlcnMgd2hlbiBjcmVhdGluZyBhIG1vZGVsDQotIGNob3JlOiB1cGRhdGUgcHJlX2dlbi5kYXJ0IGZvciByZWFkYWJpbGl0eQ0KDQojIDAuMS4xDQoNCi0gZml4OiBSZW1vdmUgZXh0cmEgLmRhcnQgc3VmZml4IG9uIGdlbmVyYXRlZCBmaWxlDQoNCiMgMC4xLjANCg0KLSBmZWF0OiBTdXBwb3J0IExpc3QgdHlwZXMgd2hlbiBjcmVhdGluZyBhIG1vZGVsDQotIGZlYXQ6IEFsbG93IHVubGltaXRlZCBwcm9wZXJ0aWVzIHRvIGJlIGFkZGVkDQotIGZlYXQ6IEFkZCBzaW1wbGUgZm9ybWF0IGNoZWNraW5nDQotIGNsZWFudXA6IE1ham9yIGNsZWFudXAgb24gYnJpY2sNCg0KIyAwLjAuMw0KDQotIFVwZGF0ZSBwcm9wZXJ0eSBsaW1pdCB0byAxNQ0KLSBVcGRhdGUgcm9hZG1hcCBkb2N1bWVudGF0aW9uDQoNCiMgMC4wLjINCg0KLSBVcGRhdGUgZG9jdW1lbnRhdGlvbg0KDQojIDAuMC4xDQoNCi0gQ3JlYXRlIGluaXRpYWwgTW9kZWwgQnJpY2sNCg==","type":"text"},"license":{"path":"LICENSE","data":"TUlUIExpY2Vuc2UNCg0KQ29weXJpZ2h0IChjKSAyMDIzIEx1a2UgTW9vZHkNCg0KUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQ0Kb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwNCmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMNCnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwNCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcw0KZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoNCg0KVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsDQpjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KDQpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUg0KSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksDQpGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUNCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVINCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sDQpPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRQ0KU09GVFdBUkUuDQo=","type":"text"},"vars":{"model_name":{"type":"string","description":"The model name","default":"model","prompt":"What is the models name?"},"additionals":{"type":"array","description":"The additional methods/extensions you can have on a model","defaults":["copyWith","json","equatable","toString"],"prompt":"What additional methods/extensions should the model have?","values":["copyWith","json","equatable","toString"]},"style":{"type":"enum","description":"The style that the file is augmented via generation code","default":"basic","prompt":"What is the model style?","values":["basic","json_serializable","freezed"]},"jsonFile":{"type":"string","description":"Creates the model through json","default":"","prompt":"SKIP THIS IF NOT USING A JSON FILE"}}});